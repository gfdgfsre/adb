// !!! WARNING !!! THIS FILE WAS AUTOGENERATED !!! DO NOT MODIFY !!!
// !!! WARNING !!! MODIFY INSTEAD: Definitions/X86_64.json

#include "DebugServer2/Architecture/X86_64/RegistersDescriptors.h"

using ds2::Architecture::FlagDef;
using ds2::Architecture::FlagSet;
using ds2::Architecture::GDBFeature;
using ds2::Architecture::GDBFeatureEntry;
using ds2::Architecture::GDBVectorDef;
using ds2::Architecture::GDBVectorUnion;
using ds2::Architecture::GDBVectorUnionField;
using ds2::Architecture::LLDBRegisterSet;
using ds2::Architecture::RegisterDef;

#if defined(ENDIAN_BIG)
#define REG_REL_OFFSET(MAXBYTES, RELOFF, REGSIZE) ((MAXBYTES) - ((RELOFF) + (REGSIZE))
#else
#define REG_REL_OFFSET(MAXBYTES, RELOFF, REGSIZE) (RELOFF)
#endif

namespace {

//
// Register Definitions (Forward Declarations)
//

// Register Set (avx-regs)
extern RegisterDef const reg_def_ymm0;
extern RegisterDef const reg_def_ymm1;
extern RegisterDef const reg_def_ymm2;
extern RegisterDef const reg_def_ymm3;
extern RegisterDef const reg_def_ymm4;
extern RegisterDef const reg_def_ymm5;
extern RegisterDef const reg_def_ymm6;
extern RegisterDef const reg_def_ymm7;
extern RegisterDef const reg_def_ymm8;
extern RegisterDef const reg_def_ymm9;
extern RegisterDef const reg_def_ymm10;
extern RegisterDef const reg_def_ymm11;
extern RegisterDef const reg_def_ymm12;
extern RegisterDef const reg_def_ymm13;
extern RegisterDef const reg_def_ymm14;
extern RegisterDef const reg_def_ymm15;

// Register Set (eflags)
extern RegisterDef const reg_def_eflags;

// Register Set (gpr)
extern RegisterDef const reg_def_rax;
extern RegisterDef const reg_def_rbx;
extern RegisterDef const reg_def_rcx;
extern RegisterDef const reg_def_rdx;
extern RegisterDef const reg_def_rsi;
extern RegisterDef const reg_def_rdi;
extern RegisterDef const reg_def_rbp;
extern RegisterDef const reg_def_rsp;
extern RegisterDef const reg_def_r8;
extern RegisterDef const reg_def_r9;
extern RegisterDef const reg_def_r10;
extern RegisterDef const reg_def_r11;
extern RegisterDef const reg_def_r12;
extern RegisterDef const reg_def_r13;
extern RegisterDef const reg_def_r14;
extern RegisterDef const reg_def_r15;
extern RegisterDef const reg_def_rip;

// Register Set (linux-regs)
extern RegisterDef const reg_def_orig_rax;

// Register Set (pseudo-gpr16)
extern RegisterDef const reg_def_ax;
extern RegisterDef const reg_def_bx;
extern RegisterDef const reg_def_cx;
extern RegisterDef const reg_def_dx;
extern RegisterDef const reg_def_si;
extern RegisterDef const reg_def_di;
extern RegisterDef const reg_def_bp;
extern RegisterDef const reg_def_sp;
extern RegisterDef const reg_def_r8w;
extern RegisterDef const reg_def_r9w;
extern RegisterDef const reg_def_r10w;
extern RegisterDef const reg_def_r11w;
extern RegisterDef const reg_def_r12w;
extern RegisterDef const reg_def_r13w;
extern RegisterDef const reg_def_r14w;
extern RegisterDef const reg_def_r15w;

// Register Set (pseudo-gpr32)
extern RegisterDef const reg_def_eax;
extern RegisterDef const reg_def_ebx;
extern RegisterDef const reg_def_ecx;
extern RegisterDef const reg_def_edx;
extern RegisterDef const reg_def_esi;
extern RegisterDef const reg_def_edi;
extern RegisterDef const reg_def_ebp;
extern RegisterDef const reg_def_esp;
extern RegisterDef const reg_def_r8d;
extern RegisterDef const reg_def_r9d;
extern RegisterDef const reg_def_r10d;
extern RegisterDef const reg_def_r11d;
extern RegisterDef const reg_def_r12d;
extern RegisterDef const reg_def_r13d;
extern RegisterDef const reg_def_r14d;
extern RegisterDef const reg_def_r15d;

// Register Set (pseudo-gpr8h)
extern RegisterDef const reg_def_ah;
extern RegisterDef const reg_def_bh;
extern RegisterDef const reg_def_ch;
extern RegisterDef const reg_def_dh;

// Register Set (pseudo-gpr8l)
extern RegisterDef const reg_def_al;
extern RegisterDef const reg_def_bl;
extern RegisterDef const reg_def_cl;
extern RegisterDef const reg_def_dl;
extern RegisterDef const reg_def_sil;
extern RegisterDef const reg_def_dil;
extern RegisterDef const reg_def_bpl;
extern RegisterDef const reg_def_spl;
extern RegisterDef const reg_def_r8l;
extern RegisterDef const reg_def_r9l;
extern RegisterDef const reg_def_r10l;
extern RegisterDef const reg_def_r11l;
extern RegisterDef const reg_def_r12l;
extern RegisterDef const reg_def_r13l;
extern RegisterDef const reg_def_r14l;
extern RegisterDef const reg_def_r15l;

// Register Set (segs)
extern RegisterDef const reg_def_cs;
extern RegisterDef const reg_def_ss;
extern RegisterDef const reg_def_ds;
extern RegisterDef const reg_def_es;
extern RegisterDef const reg_def_fs;
extern RegisterDef const reg_def_gs;

// Register Set (sse-flags)
extern RegisterDef const reg_def_mxcsr;

// Register Set (sse-mask)
extern RegisterDef const reg_def_mxcsrmask;

// Register Set (sse-regs)
extern RegisterDef const reg_def_xmm0;
extern RegisterDef const reg_def_xmm1;
extern RegisterDef const reg_def_xmm2;
extern RegisterDef const reg_def_xmm3;
extern RegisterDef const reg_def_xmm4;
extern RegisterDef const reg_def_xmm5;
extern RegisterDef const reg_def_xmm6;
extern RegisterDef const reg_def_xmm7;
extern RegisterDef const reg_def_xmm8;
extern RegisterDef const reg_def_xmm9;
extern RegisterDef const reg_def_xmm10;
extern RegisterDef const reg_def_xmm11;
extern RegisterDef const reg_def_xmm12;
extern RegisterDef const reg_def_xmm13;
extern RegisterDef const reg_def_xmm14;
extern RegisterDef const reg_def_xmm15;

// Register Set (x87-flags)
extern RegisterDef const reg_def_fctrl;
extern RegisterDef const reg_def_fstat;
extern RegisterDef const reg_def_ftag;
extern RegisterDef const reg_def_fiseg;
extern RegisterDef const reg_def_fioff;
extern RegisterDef const reg_def_foseg;
extern RegisterDef const reg_def_fooff;
extern RegisterDef const reg_def_fop;

// Register Set (x87-regs)
extern RegisterDef const reg_def_st0;
extern RegisterDef const reg_def_st1;
extern RegisterDef const reg_def_st2;
extern RegisterDef const reg_def_st3;
extern RegisterDef const reg_def_st4;
extern RegisterDef const reg_def_st5;
extern RegisterDef const reg_def_st6;
extern RegisterDef const reg_def_st7;

//
// Flag Definitions (Forward Declarations)
//

extern FlagSet const flag_set_eflags;
extern FlagSet const flag_set_mxcsr;

//
// GDB Vector Definitions (Forward Declarations)
//

extern GDBVectorDef const vec_def_v4f;
extern GDBVectorDef const vec_def_v2d;
extern GDBVectorDef const vec_def_v16i8;
extern GDBVectorDef const vec_def_v8i16;
extern GDBVectorDef const vec_def_v4i32;
extern GDBVectorDef const vec_def_v2i64;
extern GDBVectorUnion const vec_def_vec128;

//
// LLDB Register Sets
//

// LLDB Register Set (General Purpose Registers)

RegisterDef const *const lldb_reg_defs_0[] = {
    &reg_def_rax,  &reg_def_rbx,  &reg_def_rcx,    &reg_def_rdx,  &reg_def_rsi,
    &reg_def_rdi,  &reg_def_rbp,  &reg_def_rsp,    &reg_def_r8,   &reg_def_r9,
    &reg_def_r10,  &reg_def_r11,  &reg_def_r12,    &reg_def_r13,  &reg_def_r14,
    &reg_def_r15,  &reg_def_rip,  &reg_def_eflags, &reg_def_cs,   &reg_def_ss,
    &reg_def_ds,   &reg_def_es,   &reg_def_fs,     &reg_def_gs,   &reg_def_eax,
    &reg_def_ebx,  &reg_def_ecx,  &reg_def_edx,    &reg_def_esi,  &reg_def_edi,
    &reg_def_ebp,  &reg_def_esp,  &reg_def_r8d,    &reg_def_r9d,  &reg_def_r10d,
    &reg_def_r11d, &reg_def_r12d, &reg_def_r13d,   &reg_def_r14d, &reg_def_r15d,
    &reg_def_ax,   &reg_def_bx,   &reg_def_cx,     &reg_def_dx,   &reg_def_si,
    &reg_def_di,   &reg_def_bp,   &reg_def_sp,     &reg_def_r8w,  &reg_def_r9w,
    &reg_def_r10w, &reg_def_r11w, &reg_def_r12w,   &reg_def_r13w, &reg_def_r14w,
    &reg_def_r15w, &reg_def_ah,   &reg_def_bh,     &reg_def_ch,   &reg_def_dh,
    &reg_def_al,   &reg_def_bl,   &reg_def_cl,     &reg_def_dl,   &reg_def_sil,
    &reg_def_dil,  &reg_def_bpl,  &reg_def_spl,    &reg_def_r8l,  &reg_def_r9l,
    &reg_def_r10l, &reg_def_r11l, &reg_def_r12l,   &reg_def_r13l, &reg_def_r14l,
    &reg_def_r15l, nullptr};

LLDBRegisterSet const lldb_reg_set_0 = {"General Purpose Registers", 76,
                                        lldb_reg_defs_0};

// LLDB Register Set (Floating Point Registers)

RegisterDef const *const lldb_reg_defs_1[] = {
    &reg_def_fctrl, &reg_def_fstat,     &reg_def_ftag,  &reg_def_fiseg,
    &reg_def_fioff, &reg_def_foseg,     &reg_def_fooff, &reg_def_fop,
    &reg_def_mxcsr, &reg_def_mxcsrmask, &reg_def_st0,   &reg_def_st1,
    &reg_def_st2,   &reg_def_st3,       &reg_def_st4,   &reg_def_st5,
    &reg_def_st6,   &reg_def_st7,       &reg_def_xmm0,  &reg_def_xmm1,
    &reg_def_xmm2,  &reg_def_xmm3,      &reg_def_xmm4,  &reg_def_xmm5,
    &reg_def_xmm6,  &reg_def_xmm7,      &reg_def_xmm8,  &reg_def_xmm9,
    &reg_def_xmm10, &reg_def_xmm11,     &reg_def_xmm12, &reg_def_xmm13,
    &reg_def_xmm14, &reg_def_xmm15,     nullptr};

LLDBRegisterSet const lldb_reg_set_1 = {"Floating Point Registers", 34,
                                        lldb_reg_defs_1};

// LLDB Register Set (Advanced Vector Extensions)

RegisterDef const *const lldb_reg_defs_2[] = {
    &reg_def_ymm0,  &reg_def_ymm1,  &reg_def_ymm2,  &reg_def_ymm3,
    &reg_def_ymm4,  &reg_def_ymm5,  &reg_def_ymm6,  &reg_def_ymm7,
    &reg_def_ymm8,  &reg_def_ymm9,  &reg_def_ymm10, &reg_def_ymm11,
    &reg_def_ymm12, &reg_def_ymm13, &reg_def_ymm14, &reg_def_ymm15,
    nullptr};

LLDBRegisterSet const lldb_reg_set_2 = {"Advanced Vector Extensions", 16,
                                        lldb_reg_defs_2};

LLDBRegisterSet const *const lldb_reg_sets[] = {
    &lldb_reg_set_0, &lldb_reg_set_1, &lldb_reg_set_2, nullptr};

//
// GDB Features
//

// GDB Feature (org.gnu.gdb.i386.core)
GDBFeatureEntry const gdb_fents_org_gnu_gdb_i386_core[] = {
    {ds2::Architecture::kGDBFeatureTypeFlags, &flag_set_eflags},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_rax},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_rbx},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_rcx},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_rdx},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_rsi},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_rdi},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_rbp},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_rsp},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_r8},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_r9},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_r10},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_r11},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_r12},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_r13},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_r14},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_r15},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_rip},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_eflags},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_cs},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_ss},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_ds},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_es},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_fs},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_gs},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_st0},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_st1},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_st2},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_st3},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_st4},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_st5},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_st6},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_st7},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_fctrl},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_fstat},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_ftag},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_fiseg},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_fioff},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_foseg},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_fooff},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_fop},
    {ds2::Architecture::kGDBFeatureTypeNone, nullptr}};
GDBFeature const gdb_feat_org_gnu_gdb_i386_core = {
    "org.gnu.gdb.i386.core", "64bit-core.xml", 41,
    gdb_fents_org_gnu_gdb_i386_core};

// GDB Feature (org.gnu.gdb.i386.sse)
GDBFeatureEntry const gdb_fents_org_gnu_gdb_i386_sse[] = {
    {ds2::Architecture::kGDBFeatureTypeVector, &vec_def_v4f},
    {ds2::Architecture::kGDBFeatureTypeVector, &vec_def_v2d},
    {ds2::Architecture::kGDBFeatureTypeVector, &vec_def_v16i8},
    {ds2::Architecture::kGDBFeatureTypeVector, &vec_def_v8i16},
    {ds2::Architecture::kGDBFeatureTypeVector, &vec_def_v4i32},
    {ds2::Architecture::kGDBFeatureTypeVector, &vec_def_v2i64},
    {ds2::Architecture::kGDBFeatureTypeUnion, &vec_def_vec128},
    {ds2::Architecture::kGDBFeatureTypeFlags, &flag_set_mxcsr},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm0},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm1},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm2},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm3},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm4},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm5},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm6},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm7},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm8},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm9},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm10},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm11},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm12},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm13},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm14},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm15},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_mxcsr},
    {ds2::Architecture::kGDBFeatureTypeNone, nullptr}};
GDBFeature const gdb_feat_org_gnu_gdb_i386_sse = {
    "org.gnu.gdb.i386.sse", "64bit-sse.xml", 25,
    gdb_fents_org_gnu_gdb_i386_sse};

// GDB Feature (org.gnu.gdb.i386.linux)
GDBFeatureEntry const gdb_fents_org_gnu_gdb_i386_linux[] = {
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_orig_rax},
    {ds2::Architecture::kGDBFeatureTypeNone, nullptr}};
GDBFeature const gdb_feat_org_gnu_gdb_i386_linux = {
    "org.gnu.gdb.i386.linux", "64bit-linux.xml", 1,
    gdb_fents_org_gnu_gdb_i386_linux};

// GDB Features (all)
GDBFeature const *const gdb_features[] = {
    &gdb_feat_org_gnu_gdb_i386_core, &gdb_feat_org_gnu_gdb_i386_sse,
    &gdb_feat_org_gnu_gdb_i386_linux, nullptr};

//
// LLDB Register Invalidation/Container Sets
//

RegisterDef const *const reg_inv_defs_rax[] = {
    &reg_def_rax, &reg_def_eax, &reg_def_ax, &reg_def_ah, &reg_def_al, nullptr};
RegisterDef const *const reg_inv_defs_rbx[] = {
    &reg_def_rbx, &reg_def_ebx, &reg_def_bx, &reg_def_bh, &reg_def_bl, nullptr};
RegisterDef const *const reg_inv_defs_rcx[] = {
    &reg_def_rcx, &reg_def_ecx, &reg_def_cx, &reg_def_ch, &reg_def_cl, nullptr};
RegisterDef const *const reg_inv_defs_rdx[] = {
    &reg_def_rdx, &reg_def_edx, &reg_def_dx, &reg_def_dh, &reg_def_dl, nullptr};
RegisterDef const *const reg_inv_defs_rsi[] = {
    &reg_def_rsi, &reg_def_esi, &reg_def_si, &reg_def_sil, nullptr};
RegisterDef const *const reg_inv_defs_rdi[] = {
    &reg_def_rdi, &reg_def_edi, &reg_def_di, &reg_def_dil, nullptr};
RegisterDef const *const reg_inv_defs_rbp[] = {
    &reg_def_rbp, &reg_def_ebp, &reg_def_bp, &reg_def_bpl, nullptr};
RegisterDef const *const reg_inv_defs_rsp[] = {
    &reg_def_rsp, &reg_def_esp, &reg_def_sp, &reg_def_spl, nullptr};
RegisterDef const *const reg_inv_defs_r8[] = {
    &reg_def_r8, &reg_def_r8d, &reg_def_r8w, &reg_def_r8l, nullptr};
RegisterDef const *const reg_inv_defs_r9[] = {
    &reg_def_r9, &reg_def_r9d, &reg_def_r9w, &reg_def_r9l, nullptr};
RegisterDef const *const reg_inv_defs_r10[] = {
    &reg_def_r10, &reg_def_r10d, &reg_def_r10w, &reg_def_r10l, nullptr};
RegisterDef const *const reg_inv_defs_r11[] = {
    &reg_def_r11, &reg_def_r11d, &reg_def_r11w, &reg_def_r11l, nullptr};
RegisterDef const *const reg_inv_defs_r12[] = {
    &reg_def_r12, &reg_def_r12d, &reg_def_r12w, &reg_def_r12l, nullptr};
RegisterDef const *const reg_inv_defs_r13[] = {
    &reg_def_r13, &reg_def_r13d, &reg_def_r13w, &reg_def_r13l, nullptr};
RegisterDef const *const reg_inv_defs_r14[] = {
    &reg_def_r14, &reg_def_r14d, &reg_def_r14w, &reg_def_r14l, nullptr};
RegisterDef const *const reg_inv_defs_r15[] = {
    &reg_def_r15, &reg_def_r15d, &reg_def_r15w, &reg_def_r15l, nullptr};
RegisterDef const *const reg_inv_defs_eax[] = {
    &reg_def_rax, &reg_def_eax, &reg_def_ax, &reg_def_ah, &reg_def_al, nullptr};
RegisterDef const *const reg_cnt_defs_eax[] = {&reg_def_rax, nullptr};
RegisterDef const *const reg_inv_defs_ebx[] = {
    &reg_def_rbx, &reg_def_ebx, &reg_def_bx, &reg_def_bh, &reg_def_bl, nullptr};
RegisterDef const *const reg_cnt_defs_ebx[] = {&reg_def_rbx, nullptr};
RegisterDef const *const reg_inv_defs_ecx[] = {
    &reg_def_rcx, &reg_def_ecx, &reg_def_cx, &reg_def_ch, &reg_def_cl, nullptr};
RegisterDef const *const reg_cnt_defs_ecx[] = {&reg_def_rcx, nullptr};
RegisterDef const *const reg_inv_defs_edx[] = {
    &reg_def_rdx, &reg_def_edx, &reg_def_dx, &reg_def_dh, &reg_def_dl, nullptr};
RegisterDef const *const reg_cnt_defs_edx[] = {&reg_def_rdx, nullptr};
RegisterDef const *const reg_inv_defs_esi[] = {
    &reg_def_rsi, &reg_def_esi, &reg_def_si, &reg_def_sil, nullptr};
RegisterDef const *const reg_cnt_defs_esi[] = {&reg_def_rsi, nullptr};
RegisterDef const *const reg_inv_defs_edi[] = {
    &reg_def_rdi, &reg_def_edi, &reg_def_di, &reg_def_dil, nullptr};
RegisterDef const *const reg_cnt_defs_edi[] = {&reg_def_rdi, nullptr};
RegisterDef const *const reg_inv_defs_ebp[] = {
    &reg_def_rbp, &reg_def_ebp, &reg_def_bp, &reg_def_bpl, nullptr};
RegisterDef const *const reg_cnt_defs_ebp[] = {&reg_def_rbp, nullptr};
RegisterDef const *const reg_inv_defs_esp[] = {
    &reg_def_rsp, &reg_def_esp, &reg_def_sp, &reg_def_spl, nullptr};
RegisterDef const *const reg_cnt_defs_esp[] = {&reg_def_rsp, nullptr};
RegisterDef const *const reg_inv_defs_r8d[] = {
    &reg_def_r8, &reg_def_r8d, &reg_def_r8w, &reg_def_r8l, nullptr};
RegisterDef const *const reg_cnt_defs_r8d[] = {&reg_def_r8, nullptr};
RegisterDef const *const reg_inv_defs_r9d[] = {
    &reg_def_r9, &reg_def_r9d, &reg_def_r9w, &reg_def_r9l, nullptr};
RegisterDef const *const reg_cnt_defs_r9d[] = {&reg_def_r9, nullptr};
RegisterDef const *const reg_inv_defs_r10d[] = {
    &reg_def_r10, &reg_def_r10d, &reg_def_r10w, &reg_def_r10l, nullptr};
RegisterDef const *const reg_cnt_defs_r10d[] = {&reg_def_r10, nullptr};
RegisterDef const *const reg_inv_defs_r11d[] = {
    &reg_def_r11, &reg_def_r11d, &reg_def_r11w, &reg_def_r11l, nullptr};
RegisterDef const *const reg_cnt_defs_r11d[] = {&reg_def_r11, nullptr};
RegisterDef const *const reg_inv_defs_r12d[] = {
    &reg_def_r12, &reg_def_r12d, &reg_def_r12w, &reg_def_r12l, nullptr};
RegisterDef const *const reg_cnt_defs_r12d[] = {&reg_def_r12, nullptr};
RegisterDef const *const reg_inv_defs_r13d[] = {
    &reg_def_r13, &reg_def_r13d, &reg_def_r13w, &reg_def_r13l, nullptr};
RegisterDef const *const reg_cnt_defs_r13d[] = {&reg_def_r13, nullptr};
RegisterDef const *const reg_inv_defs_r14d[] = {
    &reg_def_r14, &reg_def_r14d, &reg_def_r14w, &reg_def_r14l, nullptr};
RegisterDef const *const reg_cnt_defs_r14d[] = {&reg_def_r14, nullptr};
RegisterDef const *const reg_inv_defs_r15d[] = {
    &reg_def_r15, &reg_def_r15d, &reg_def_r15w, &reg_def_r15l, nullptr};
RegisterDef const *const reg_cnt_defs_r15d[] = {&reg_def_r15, nullptr};
RegisterDef const *const reg_inv_defs_ax[] = {
    &reg_def_rax, &reg_def_eax, &reg_def_ax, &reg_def_ah, &reg_def_al, nullptr};
RegisterDef const *const reg_cnt_defs_ax[] = {&reg_def_rax, nullptr};
RegisterDef const *const reg_inv_defs_bx[] = {
    &reg_def_rbx, &reg_def_ebx, &reg_def_bx, &reg_def_bh, &reg_def_bl, nullptr};
RegisterDef const *const reg_cnt_defs_bx[] = {&reg_def_rbx, nullptr};
RegisterDef const *const reg_inv_defs_cx[] = {
    &reg_def_rcx, &reg_def_ecx, &reg_def_cx, &reg_def_ch, &reg_def_cl, nullptr};
RegisterDef const *const reg_cnt_defs_cx[] = {&reg_def_rcx, nullptr};
RegisterDef const *const reg_inv_defs_dx[] = {
    &reg_def_rdx, &reg_def_edx, &reg_def_dx, &reg_def_dh, &reg_def_dl, nullptr};
RegisterDef const *const reg_cnt_defs_dx[] = {&reg_def_rdx, nullptr};
RegisterDef const *const reg_inv_defs_si[] = {
    &reg_def_rsi, &reg_def_esi, &reg_def_si, &reg_def_sil, nullptr};
RegisterDef const *const reg_cnt_defs_si[] = {&reg_def_rsi, nullptr};
RegisterDef const *const reg_inv_defs_di[] = {
    &reg_def_rdi, &reg_def_edi, &reg_def_di, &reg_def_dil, nullptr};
RegisterDef const *const reg_cnt_defs_di[] = {&reg_def_rdi, nullptr};
RegisterDef const *const reg_inv_defs_bp[] = {
    &reg_def_rbp, &reg_def_ebp, &reg_def_bp, &reg_def_bpl, nullptr};
RegisterDef const *const reg_cnt_defs_bp[] = {&reg_def_rbp, nullptr};
RegisterDef const *const reg_inv_defs_sp[] = {
    &reg_def_rsp, &reg_def_esp, &reg_def_sp, &reg_def_spl, nullptr};
RegisterDef const *const reg_cnt_defs_sp[] = {&reg_def_rsp, nullptr};
RegisterDef const *const reg_inv_defs_r8w[] = {
    &reg_def_r8, &reg_def_r8d, &reg_def_r8w, &reg_def_r8l, nullptr};
RegisterDef const *const reg_cnt_defs_r8w[] = {&reg_def_r8, nullptr};
RegisterDef const *const reg_inv_defs_r9w[] = {
    &reg_def_r9, &reg_def_r9d, &reg_def_r9w, &reg_def_r9l, nullptr};
RegisterDef const *const reg_cnt_defs_r9w[] = {&reg_def_r9, nullptr};
RegisterDef const *const reg_inv_defs_r10w[] = {
    &reg_def_r10, &reg_def_r10d, &reg_def_r10w, &reg_def_r10l, nullptr};
RegisterDef const *const reg_cnt_defs_r10w[] = {&reg_def_r10, nullptr};
RegisterDef const *const reg_inv_defs_r11w[] = {
    &reg_def_r11, &reg_def_r11d, &reg_def_r11w, &reg_def_r11l, nullptr};
RegisterDef const *const reg_cnt_defs_r11w[] = {&reg_def_r11, nullptr};
RegisterDef const *const reg_inv_defs_r12w[] = {
    &reg_def_r12, &reg_def_r12d, &reg_def_r12w, &reg_def_r12l, nullptr};
RegisterDef const *const reg_cnt_defs_r12w[] = {&reg_def_r12, nullptr};
RegisterDef const *const reg_inv_defs_r13w[] = {
    &reg_def_r13, &reg_def_r13d, &reg_def_r13w, &reg_def_r13l, nullptr};
RegisterDef const *const reg_cnt_defs_r13w[] = {&reg_def_r13, nullptr};
RegisterDef const *const reg_inv_defs_r14w[] = {
    &reg_def_r14, &reg_def_r14d, &reg_def_r14w, &reg_def_r14l, nullptr};
RegisterDef const *const reg_cnt_defs_r14w[] = {&reg_def_r14, nullptr};
RegisterDef const *const reg_inv_defs_r15w[] = {
    &reg_def_r15, &reg_def_r15d, &reg_def_r15w, &reg_def_r15l, nullptr};
RegisterDef const *const reg_cnt_defs_r15w[] = {&reg_def_r15, nullptr};
RegisterDef const *const reg_inv_defs_ah[] = {
    &reg_def_rax, &reg_def_eax, &reg_def_ax, &reg_def_ah, &reg_def_al, nullptr};
RegisterDef const *const reg_cnt_defs_ah[] = {&reg_def_rax, nullptr};
RegisterDef const *const reg_inv_defs_bh[] = {
    &reg_def_rbx, &reg_def_ebx, &reg_def_bx, &reg_def_bh, &reg_def_bl, nullptr};
RegisterDef const *const reg_cnt_defs_bh[] = {&reg_def_rbx, nullptr};
RegisterDef const *const reg_inv_defs_ch[] = {
    &reg_def_rcx, &reg_def_ecx, &reg_def_cx, &reg_def_ch, &reg_def_cl, nullptr};
RegisterDef const *const reg_cnt_defs_ch[] = {&reg_def_rcx, nullptr};
RegisterDef const *const reg_inv_defs_dh[] = {
    &reg_def_rdx, &reg_def_edx, &reg_def_dx, &reg_def_dh, &reg_def_dl, nullptr};
RegisterDef const *const reg_cnt_defs_dh[] = {&reg_def_rdx, nullptr};
RegisterDef const *const reg_inv_defs_al[] = {
    &reg_def_rax, &reg_def_eax, &reg_def_ax, &reg_def_ah, &reg_def_al, nullptr};
RegisterDef const *const reg_cnt_defs_al[] = {&reg_def_rax, nullptr};
RegisterDef const *const reg_inv_defs_bl[] = {
    &reg_def_rbx, &reg_def_ebx, &reg_def_bx, &reg_def_bh, &reg_def_bl, nullptr};
RegisterDef const *const reg_cnt_defs_bl[] = {&reg_def_rbx, nullptr};
RegisterDef const *const reg_inv_defs_cl[] = {
    &reg_def_rcx, &reg_def_ecx, &reg_def_cx, &reg_def_ch, &reg_def_cl, nullptr};
RegisterDef const *const reg_cnt_defs_cl[] = {&reg_def_rcx, nullptr};
RegisterDef const *const reg_inv_defs_dl[] = {
    &reg_def_rdx, &reg_def_edx, &reg_def_dx, &reg_def_dh, &reg_def_dl, nullptr};
RegisterDef const *const reg_cnt_defs_dl[] = {&reg_def_rdx, nullptr};
RegisterDef const *const reg_inv_defs_sil[] = {
    &reg_def_rsi, &reg_def_esi, &reg_def_si, &reg_def_sil, nullptr};
RegisterDef const *const reg_cnt_defs_sil[] = {&reg_def_rsi, nullptr};
RegisterDef const *const reg_inv_defs_dil[] = {
    &reg_def_rdi, &reg_def_edi, &reg_def_di, &reg_def_dil, nullptr};
RegisterDef const *const reg_cnt_defs_dil[] = {&reg_def_rdi, nullptr};
RegisterDef const *const reg_inv_defs_bpl[] = {
    &reg_def_rbp, &reg_def_ebp, &reg_def_bp, &reg_def_bpl, nullptr};
RegisterDef const *const reg_cnt_defs_bpl[] = {&reg_def_rbp, nullptr};
RegisterDef const *const reg_inv_defs_spl[] = {
    &reg_def_rsp, &reg_def_esp, &reg_def_sp, &reg_def_spl, nullptr};
RegisterDef const *const reg_cnt_defs_spl[] = {&reg_def_rsp, nullptr};
RegisterDef const *const reg_inv_defs_r8l[] = {
    &reg_def_r8, &reg_def_r8d, &reg_def_r8w, &reg_def_r8l, nullptr};
RegisterDef const *const reg_cnt_defs_r8l[] = {&reg_def_r8, nullptr};
RegisterDef const *const reg_inv_defs_r9l[] = {
    &reg_def_r9, &reg_def_r9d, &reg_def_r9w, &reg_def_r9l, nullptr};
RegisterDef const *const reg_cnt_defs_r9l[] = {&reg_def_r9, nullptr};
RegisterDef const *const reg_inv_defs_r10l[] = {
    &reg_def_r10, &reg_def_r10d, &reg_def_r10w, &reg_def_r10l, nullptr};
RegisterDef const *const reg_cnt_defs_r10l[] = {&reg_def_r10, nullptr};
RegisterDef const *const reg_inv_defs_r11l[] = {
    &reg_def_r11, &reg_def_r11d, &reg_def_r11w, &reg_def_r11l, nullptr};
RegisterDef const *const reg_cnt_defs_r11l[] = {&reg_def_r11, nullptr};
RegisterDef const *const reg_inv_defs_r12l[] = {
    &reg_def_r12, &reg_def_r12d, &reg_def_r12w, &reg_def_r12l, nullptr};
RegisterDef const *const reg_cnt_defs_r12l[] = {&reg_def_r12, nullptr};
RegisterDef const *const reg_inv_defs_r13l[] = {
    &reg_def_r13, &reg_def_r13d, &reg_def_r13w, &reg_def_r13l, nullptr};
RegisterDef const *const reg_cnt_defs_r13l[] = {&reg_def_r13, nullptr};
RegisterDef const *const reg_inv_defs_r14l[] = {
    &reg_def_r14, &reg_def_r14d, &reg_def_r14w, &reg_def_r14l, nullptr};
RegisterDef const *const reg_cnt_defs_r14l[] = {&reg_def_r14, nullptr};
RegisterDef const *const reg_inv_defs_r15l[] = {
    &reg_def_r15, &reg_def_r15d, &reg_def_r15w, &reg_def_r15l, nullptr};
RegisterDef const *const reg_cnt_defs_r15l[] = {&reg_def_r15, nullptr};
RegisterDef const *const reg_inv_defs_ymm0[] = {&reg_def_ymm0, &reg_def_xmm0,
                                                nullptr};
RegisterDef const *const reg_inv_defs_ymm1[] = {&reg_def_ymm1, &reg_def_xmm1,
                                                nullptr};
RegisterDef const *const reg_inv_defs_ymm2[] = {&reg_def_ymm2, &reg_def_xmm2,
                                                nullptr};
RegisterDef const *const reg_inv_defs_ymm3[] = {&reg_def_ymm3, &reg_def_xmm3,
                                                nullptr};
RegisterDef const *const reg_inv_defs_ymm4[] = {&reg_def_ymm4, &reg_def_xmm4,
                                                nullptr};
RegisterDef const *const reg_inv_defs_ymm5[] = {&reg_def_ymm5, &reg_def_xmm5,
                                                nullptr};
RegisterDef const *const reg_inv_defs_ymm6[] = {&reg_def_ymm6, &reg_def_xmm6,
                                                nullptr};
RegisterDef const *const reg_inv_defs_ymm7[] = {&reg_def_ymm7, &reg_def_xmm7,
                                                nullptr};
RegisterDef const *const reg_inv_defs_ymm8[] = {&reg_def_ymm8, &reg_def_xmm8,
                                                nullptr};
RegisterDef const *const reg_inv_defs_ymm9[] = {&reg_def_ymm9, &reg_def_xmm9,
                                                nullptr};
RegisterDef const *const reg_inv_defs_ymm10[] = {&reg_def_ymm10, &reg_def_xmm10,
                                                 nullptr};
RegisterDef const *const reg_inv_defs_ymm11[] = {&reg_def_ymm11, &reg_def_xmm11,
                                                 nullptr};
RegisterDef const *const reg_inv_defs_ymm12[] = {&reg_def_ymm12, &reg_def_xmm12,
                                                 nullptr};
RegisterDef const *const reg_inv_defs_ymm13[] = {&reg_def_ymm13, &reg_def_xmm13,
                                                 nullptr};
RegisterDef const *const reg_inv_defs_ymm14[] = {&reg_def_ymm14, &reg_def_xmm14,
                                                 nullptr};
RegisterDef const *const reg_inv_defs_ymm15[] = {&reg_def_ymm15, &reg_def_xmm15,
                                                 nullptr};
RegisterDef const *const reg_inv_defs_xmm0[] = {&reg_def_ymm0, &reg_def_xmm0,
                                                nullptr};
RegisterDef const *const reg_cnt_defs_xmm0[] = {&reg_def_ymm0, nullptr};
RegisterDef const *const reg_inv_defs_xmm1[] = {&reg_def_ymm1, &reg_def_xmm1,
                                                nullptr};
RegisterDef const *const reg_cnt_defs_xmm1[] = {&reg_def_ymm1, nullptr};
RegisterDef const *const reg_inv_defs_xmm2[] = {&reg_def_ymm2, &reg_def_xmm2,
                                                nullptr};
RegisterDef const *const reg_cnt_defs_xmm2[] = {&reg_def_ymm2, nullptr};
RegisterDef const *const reg_inv_defs_xmm3[] = {&reg_def_ymm3, &reg_def_xmm3,
                                                nullptr};
RegisterDef const *const reg_cnt_defs_xmm3[] = {&reg_def_ymm3, nullptr};
RegisterDef const *const reg_inv_defs_xmm4[] = {&reg_def_ymm4, &reg_def_xmm4,
                                                nullptr};
RegisterDef const *const reg_cnt_defs_xmm4[] = {&reg_def_ymm4, nullptr};
RegisterDef const *const reg_inv_defs_xmm5[] = {&reg_def_ymm5, &reg_def_xmm5,
                                                nullptr};
RegisterDef const *const reg_cnt_defs_xmm5[] = {&reg_def_ymm5, nullptr};
RegisterDef const *const reg_inv_defs_xmm6[] = {&reg_def_ymm6, &reg_def_xmm6,
                                                nullptr};
RegisterDef const *const reg_cnt_defs_xmm6[] = {&reg_def_ymm6, nullptr};
RegisterDef const *const reg_inv_defs_xmm7[] = {&reg_def_ymm7, &reg_def_xmm7,
                                                nullptr};
RegisterDef const *const reg_cnt_defs_xmm7[] = {&reg_def_ymm7, nullptr};
RegisterDef const *const reg_inv_defs_xmm8[] = {&reg_def_ymm8, &reg_def_xmm8,
                                                nullptr};
RegisterDef const *const reg_cnt_defs_xmm8[] = {&reg_def_ymm8, nullptr};
RegisterDef const *const reg_inv_defs_xmm9[] = {&reg_def_ymm9, &reg_def_xmm9,
                                                nullptr};
RegisterDef const *const reg_cnt_defs_xmm9[] = {&reg_def_ymm9, nullptr};
RegisterDef const *const reg_inv_defs_xmm10[] = {&reg_def_ymm10, &reg_def_xmm10,
                                                 nullptr};
RegisterDef const *const reg_cnt_defs_xmm10[] = {&reg_def_ymm10, nullptr};
RegisterDef const *const reg_inv_defs_xmm11[] = {&reg_def_ymm11, &reg_def_xmm11,
                                                 nullptr};
RegisterDef const *const reg_cnt_defs_xmm11[] = {&reg_def_ymm11, nullptr};
RegisterDef const *const reg_inv_defs_xmm12[] = {&reg_def_ymm12, &reg_def_xmm12,
                                                 nullptr};
RegisterDef const *const reg_cnt_defs_xmm12[] = {&reg_def_ymm12, nullptr};
RegisterDef const *const reg_inv_defs_xmm13[] = {&reg_def_ymm13, &reg_def_xmm13,
                                                 nullptr};
RegisterDef const *const reg_cnt_defs_xmm13[] = {&reg_def_ymm13, nullptr};
RegisterDef const *const reg_inv_defs_xmm14[] = {&reg_def_ymm14, &reg_def_xmm14,
                                                 nullptr};
RegisterDef const *const reg_cnt_defs_xmm14[] = {&reg_def_ymm14, nullptr};
RegisterDef const *const reg_inv_defs_xmm15[] = {&reg_def_ymm15, &reg_def_xmm15,
                                                 nullptr};
RegisterDef const *const reg_cnt_defs_xmm15[] = {&reg_def_ymm15, nullptr};

//
// Flag Sets
//

// Flag Set (eflags)
FlagDef const flag_defs_eflags[] = {
    {"CF", 0, 1},  {"", 1, 1},     {"PF", 2, 1},   {"AF", 4, 1},
    {"ZF", 6, 1},  {"SF", 7, 1},   {"TF", 8, 1},   {"IF", 9, 1},
    {"DF", 10, 1}, {"OF", 11, 1},  {"NT", 14, 1},  {"RF", 16, 1},
    {"VM", 17, 1}, {"AC", 18, 1},  {"VIF", 19, 1}, {"VIP", 20, 1},
    {"ID", 21, 1}, {nullptr, 0, 0}};

FlagSet const flag_set_eflags = {"i386_eflags", 32, 17, flag_defs_eflags};

// Flag Set (mxcsr)
FlagDef const flag_defs_mxcsr[] = {
    {"IE", 0, 1},  {"DE", 1, 1},  {"ZE", 2, 1},   {"OE", 3, 1},
    {"UE", 4, 1},  {"PE", 5, 1},  {"DAZ", 6, 1},  {"IM", 7, 1},
    {"DM", 8, 1},  {"ZM", 9, 1},  {"OM", 10, 1},  {"UM", 11, 1},
    {"PM", 12, 1}, {"FZ", 15, 1}, {nullptr, 0, 0}};

FlagSet const flag_set_mxcsr = {"i386_mxcsr", 32, 14, flag_defs_mxcsr};

//
// GDB Vector Set
//

GDBVectorDef const vec_def_v4f = {"v4f", 128, -1,
                                  ds2::Architecture::kGDBEncodingIEEESingle};
GDBVectorDef const vec_def_v2d = {"v2d", 128, -1,
                                  ds2::Architecture::kGDBEncodingIEEEDouble};
GDBVectorDef const vec_def_v16i8 = {"v16i8", 128, 8,
                                    ds2::Architecture::kGDBEncodingInteger};
GDBVectorDef const vec_def_v8i16 = {"v8i16", 128, 16,
                                    ds2::Architecture::kGDBEncodingInteger};
GDBVectorDef const vec_def_v4i32 = {"v4i32", 128, 32,
                                    ds2::Architecture::kGDBEncodingInteger};
GDBVectorDef const vec_def_v2i64 = {"v2i64", 128, 64,
                                    ds2::Architecture::kGDBEncodingInteger};
GDBVectorUnionField const vec_unf_vec128[] = {
    {"v4_float", ds2::Architecture::kGDBEncodingCustom, &vec_def_v4f},
    {"v2_double", ds2::Architecture::kGDBEncodingCustom, &vec_def_v2d},
    {"v16_int8", ds2::Architecture::kGDBEncodingCustom, &vec_def_v16i8},
    {"v8_int16", ds2::Architecture::kGDBEncodingCustom, &vec_def_v8i16},
    {"v4_int32", ds2::Architecture::kGDBEncodingCustom, &vec_def_v4i32},
    {"v2_int64", ds2::Architecture::kGDBEncodingCustom, &vec_def_v2i64},
    {"uint128", ds2::Architecture::kGDBEncodingUInt128, nullptr},
    {nullptr, ds2::Architecture::kGDBEncodingUnknown, nullptr}};
GDBVectorUnion const vec_def_vec128 = {"vec128", 7, vec_unf_vec128};

//
// Register Definitions
//

RegisterDef const reg_def_rax = {
    "rax",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    64,
    ds2::Architecture::X86_64::reg_dwarf_rax,
    ds2::Architecture::X86_64::reg_gdb_rax,
    ds2::Architecture::X86_64::reg_ehframe_rax,
    ds2::Architecture::X86_64::reg_lldb_rax,
    0,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_rax,
    nullptr};
RegisterDef const reg_def_rbx = {
    "rbx",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    64,
    ds2::Architecture::X86_64::reg_dwarf_rbx,
    ds2::Architecture::X86_64::reg_gdb_rbx,
    ds2::Architecture::X86_64::reg_ehframe_rbx,
    ds2::Architecture::X86_64::reg_lldb_rbx,
    8,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_rbx,
    nullptr};
RegisterDef const reg_def_rcx = {
    "rcx",
    nullptr,
    "arg4",
    "arg4",
    nullptr,
    64,
    ds2::Architecture::X86_64::reg_dwarf_rcx,
    ds2::Architecture::X86_64::reg_gdb_rcx,
    ds2::Architecture::X86_64::reg_ehframe_rcx,
    ds2::Architecture::X86_64::reg_lldb_rcx,
    16,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_rcx,
    nullptr};
RegisterDef const reg_def_rdx = {
    "rdx",
    nullptr,
    "arg3",
    "arg3",
    nullptr,
    64,
    ds2::Architecture::X86_64::reg_dwarf_rdx,
    ds2::Architecture::X86_64::reg_gdb_rdx,
    ds2::Architecture::X86_64::reg_ehframe_rdx,
    ds2::Architecture::X86_64::reg_lldb_rdx,
    24,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_rdx,
    nullptr};
RegisterDef const reg_def_rsi = {
    "rsi",
    nullptr,
    "arg2",
    "arg2",
    nullptr,
    64,
    ds2::Architecture::X86_64::reg_dwarf_rsi,
    ds2::Architecture::X86_64::reg_gdb_rsi,
    ds2::Architecture::X86_64::reg_ehframe_rsi,
    ds2::Architecture::X86_64::reg_lldb_rsi,
    32,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_rsi,
    nullptr};
RegisterDef const reg_def_rdi = {
    "rdi",
    nullptr,
    "arg1",
    "arg1",
    nullptr,
    64,
    ds2::Architecture::X86_64::reg_dwarf_rdi,
    ds2::Architecture::X86_64::reg_gdb_rdi,
    ds2::Architecture::X86_64::reg_ehframe_rdi,
    ds2::Architecture::X86_64::reg_lldb_rdi,
    40,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_rdi,
    nullptr};
RegisterDef const reg_def_rbp = {
    "rbp",
    nullptr,
    "fp",
    "fp",
    nullptr,
    64,
    ds2::Architecture::X86_64::reg_dwarf_rbp,
    ds2::Architecture::X86_64::reg_gdb_rbp,
    ds2::Architecture::X86_64::reg_ehframe_rbp,
    ds2::Architecture::X86_64::reg_lldb_rbp,
    48,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingDataPointer, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_rbp,
    nullptr};
RegisterDef const reg_def_rsp = {
    "rsp",
    nullptr,
    "sp",
    "sp",
    nullptr,
    64,
    ds2::Architecture::X86_64::reg_dwarf_rsp,
    ds2::Architecture::X86_64::reg_gdb_rsp,
    ds2::Architecture::X86_64::reg_ehframe_rsp,
    ds2::Architecture::X86_64::reg_lldb_rsp,
    56,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingDataPointer, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_rsp,
    nullptr};
RegisterDef const reg_def_r8 = {
    "r8",
    nullptr,
    "arg5",
    "arg5",
    nullptr,
    64,
    ds2::Architecture::X86_64::reg_dwarf_r8,
    ds2::Architecture::X86_64::reg_gdb_r8,
    ds2::Architecture::X86_64::reg_ehframe_r8,
    ds2::Architecture::X86_64::reg_lldb_r8,
    64,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_r8,
    nullptr};
RegisterDef const reg_def_r9 = {
    "r9",
    nullptr,
    "arg6",
    "arg6",
    nullptr,
    64,
    ds2::Architecture::X86_64::reg_dwarf_r9,
    ds2::Architecture::X86_64::reg_gdb_r9,
    ds2::Architecture::X86_64::reg_ehframe_r9,
    ds2::Architecture::X86_64::reg_lldb_r9,
    72,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_r9,
    nullptr};
RegisterDef const reg_def_r10 = {
    "r10",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    64,
    ds2::Architecture::X86_64::reg_dwarf_r10,
    ds2::Architecture::X86_64::reg_gdb_r10,
    ds2::Architecture::X86_64::reg_ehframe_r10,
    ds2::Architecture::X86_64::reg_lldb_r10,
    80,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_r10,
    nullptr};
RegisterDef const reg_def_r11 = {
    "r11",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    64,
    ds2::Architecture::X86_64::reg_dwarf_r11,
    ds2::Architecture::X86_64::reg_gdb_r11,
    ds2::Architecture::X86_64::reg_ehframe_r11,
    ds2::Architecture::X86_64::reg_lldb_r11,
    88,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_r11,
    nullptr};
RegisterDef const reg_def_r12 = {
    "r12",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    64,
    ds2::Architecture::X86_64::reg_dwarf_r12,
    ds2::Architecture::X86_64::reg_gdb_r12,
    ds2::Architecture::X86_64::reg_ehframe_r12,
    ds2::Architecture::X86_64::reg_lldb_r12,
    96,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_r12,
    nullptr};
RegisterDef const reg_def_r13 = {
    "r13",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    64,
    ds2::Architecture::X86_64::reg_dwarf_r13,
    ds2::Architecture::X86_64::reg_gdb_r13,
    ds2::Architecture::X86_64::reg_ehframe_r13,
    ds2::Architecture::X86_64::reg_lldb_r13,
    104,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_r13,
    nullptr};
RegisterDef const reg_def_r14 = {
    "r14",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    64,
    ds2::Architecture::X86_64::reg_dwarf_r14,
    ds2::Architecture::X86_64::reg_gdb_r14,
    ds2::Architecture::X86_64::reg_ehframe_r14,
    ds2::Architecture::X86_64::reg_lldb_r14,
    112,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_r14,
    nullptr};
RegisterDef const reg_def_r15 = {
    "r15",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    64,
    ds2::Architecture::X86_64::reg_dwarf_r15,
    ds2::Architecture::X86_64::reg_gdb_r15,
    ds2::Architecture::X86_64::reg_ehframe_r15,
    ds2::Architecture::X86_64::reg_lldb_r15,
    120,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_r15,
    nullptr};
RegisterDef const reg_def_rip = {
    "rip",
    nullptr,
    "pc",
    "pc",
    nullptr,
    64,
    ds2::Architecture::X86_64::reg_dwarf_rip,
    ds2::Architecture::X86_64::reg_gdb_rip,
    ds2::Architecture::X86_64::reg_ehframe_rip,
    ds2::Architecture::X86_64::reg_lldb_rip,
    128,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingCodePointer, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_eax = {
    "eax",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_eax,
    0 + REG_REL_OFFSET(8, 0, 4),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_eax,
    reg_cnt_defs_eax};
RegisterDef const reg_def_ebx = {
    "ebx",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_ebx,
    8 + REG_REL_OFFSET(8, 0, 4),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ebx,
    reg_cnt_defs_ebx};
RegisterDef const reg_def_ecx = {
    "ecx",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_ecx,
    16 + REG_REL_OFFSET(8, 0, 4),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ecx,
    reg_cnt_defs_ecx};
RegisterDef const reg_def_edx = {
    "edx",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_edx,
    24 + REG_REL_OFFSET(8, 0, 4),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_edx,
    reg_cnt_defs_edx};
RegisterDef const reg_def_esi = {
    "esi",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_esi,
    32 + REG_REL_OFFSET(8, 0, 4),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_esi,
    reg_cnt_defs_esi};
RegisterDef const reg_def_edi = {
    "edi",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_edi,
    40 + REG_REL_OFFSET(8, 0, 4),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_edi,
    reg_cnt_defs_edi};
RegisterDef const reg_def_ebp = {
    "ebp",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_ebp,
    48 + REG_REL_OFFSET(8, 0, 4),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ebp,
    reg_cnt_defs_ebp};
RegisterDef const reg_def_esp = {
    "esp",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_esp,
    56 + REG_REL_OFFSET(8, 0, 4),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_esp,
    reg_cnt_defs_esp};
RegisterDef const reg_def_r8d = {
    "r8d",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r8d,
    64 + REG_REL_OFFSET(8, 0, 4),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r8d,
    reg_cnt_defs_r8d};
RegisterDef const reg_def_r9d = {
    "r9d",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r9d,
    72 + REG_REL_OFFSET(8, 0, 4),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r9d,
    reg_cnt_defs_r9d};
RegisterDef const reg_def_r10d = {
    "r10d",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r10d,
    80 + REG_REL_OFFSET(8, 0, 4),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r10d,
    reg_cnt_defs_r10d};
RegisterDef const reg_def_r11d = {
    "r11d",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r11d,
    88 + REG_REL_OFFSET(8, 0, 4),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r11d,
    reg_cnt_defs_r11d};
RegisterDef const reg_def_r12d = {
    "r12d",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r12d,
    96 + REG_REL_OFFSET(8, 0, 4),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r12d,
    reg_cnt_defs_r12d};
RegisterDef const reg_def_r13d = {
    "r13d",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r13d,
    104 + REG_REL_OFFSET(8, 0, 4),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r13d,
    reg_cnt_defs_r13d};
RegisterDef const reg_def_r14d = {
    "r14d",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r14d,
    112 + REG_REL_OFFSET(8, 0, 4),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r14d,
    reg_cnt_defs_r14d};
RegisterDef const reg_def_r15d = {
    "r15d",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r15d,
    120 + REG_REL_OFFSET(8, 0, 4),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r15d,
    reg_cnt_defs_r15d};
RegisterDef const reg_def_ax = {
    "ax",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_ax,
    0 + REG_REL_OFFSET(8, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ax,
    reg_cnt_defs_ax};
RegisterDef const reg_def_bx = {
    "bx",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_bx,
    8 + REG_REL_OFFSET(8, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_bx,
    reg_cnt_defs_bx};
RegisterDef const reg_def_cx = {
    "cx",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_cx,
    16 + REG_REL_OFFSET(8, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_cx,
    reg_cnt_defs_cx};
RegisterDef const reg_def_dx = {
    "dx",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_dx,
    24 + REG_REL_OFFSET(8, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_dx,
    reg_cnt_defs_dx};
RegisterDef const reg_def_si = {
    "si",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_si,
    32 + REG_REL_OFFSET(8, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_si,
    reg_cnt_defs_si};
RegisterDef const reg_def_di = {
    "di",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_di,
    40 + REG_REL_OFFSET(8, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_di,
    reg_cnt_defs_di};
RegisterDef const reg_def_bp = {
    "bp",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_bp,
    48 + REG_REL_OFFSET(8, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_bp,
    reg_cnt_defs_bp};
RegisterDef const reg_def_sp = {
    "sp",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_sp,
    56 + REG_REL_OFFSET(8, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_sp,
    reg_cnt_defs_sp};
RegisterDef const reg_def_r8w = {
    "r8w",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r8w,
    64 + REG_REL_OFFSET(8, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r8w,
    reg_cnt_defs_r8w};
RegisterDef const reg_def_r9w = {
    "r9w",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r9w,
    72 + REG_REL_OFFSET(8, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r9w,
    reg_cnt_defs_r9w};
RegisterDef const reg_def_r10w = {
    "r10w",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r10w,
    80 + REG_REL_OFFSET(8, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r10w,
    reg_cnt_defs_r10w};
RegisterDef const reg_def_r11w = {
    "r11w",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r11w,
    88 + REG_REL_OFFSET(8, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r11w,
    reg_cnt_defs_r11w};
RegisterDef const reg_def_r12w = {
    "r12w",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r12w,
    96 + REG_REL_OFFSET(8, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r12w,
    reg_cnt_defs_r12w};
RegisterDef const reg_def_r13w = {
    "r13w",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r13w,
    104 + REG_REL_OFFSET(8, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r13w,
    reg_cnt_defs_r13w};
RegisterDef const reg_def_r14w = {
    "r14w",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r14w,
    112 + REG_REL_OFFSET(8, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r14w,
    reg_cnt_defs_r14w};
RegisterDef const reg_def_r15w = {
    "r15w",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r15w,
    120 + REG_REL_OFFSET(8, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r15w,
    reg_cnt_defs_r15w};
RegisterDef const reg_def_ah = {
    "ah",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_ah,
    0 + REG_REL_OFFSET(8, 1, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ah,
    reg_cnt_defs_ah};
RegisterDef const reg_def_bh = {
    "bh",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_bh,
    8 + REG_REL_OFFSET(8, 1, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_bh,
    reg_cnt_defs_bh};
RegisterDef const reg_def_ch = {
    "ch",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_ch,
    16 + REG_REL_OFFSET(8, 1, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ch,
    reg_cnt_defs_ch};
RegisterDef const reg_def_dh = {
    "dh",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_dh,
    24 + REG_REL_OFFSET(8, 1, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_dh,
    reg_cnt_defs_dh};
RegisterDef const reg_def_al = {
    "al",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_al,
    0 + REG_REL_OFFSET(8, 0, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_al,
    reg_cnt_defs_al};
RegisterDef const reg_def_bl = {
    "bl",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_bl,
    8 + REG_REL_OFFSET(8, 0, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_bl,
    reg_cnt_defs_bl};
RegisterDef const reg_def_cl = {
    "cl",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_cl,
    16 + REG_REL_OFFSET(8, 0, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_cl,
    reg_cnt_defs_cl};
RegisterDef const reg_def_dl = {
    "dl",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_dl,
    24 + REG_REL_OFFSET(8, 0, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_dl,
    reg_cnt_defs_dl};
RegisterDef const reg_def_sil = {
    "sil",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_sil,
    32 + REG_REL_OFFSET(8, 0, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_sil,
    reg_cnt_defs_sil};
RegisterDef const reg_def_dil = {
    "dil",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_dil,
    40 + REG_REL_OFFSET(8, 0, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_dil,
    reg_cnt_defs_dil};
RegisterDef const reg_def_bpl = {
    "bpl",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_bpl,
    48 + REG_REL_OFFSET(8, 0, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_bpl,
    reg_cnt_defs_bpl};
RegisterDef const reg_def_spl = {
    "spl",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_spl,
    56 + REG_REL_OFFSET(8, 0, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_spl,
    reg_cnt_defs_spl};
RegisterDef const reg_def_r8l = {
    "r8l",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r8l,
    64 + REG_REL_OFFSET(8, 0, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r8l,
    reg_cnt_defs_r8l};
RegisterDef const reg_def_r9l = {
    "r9l",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r9l,
    72 + REG_REL_OFFSET(8, 0, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r9l,
    reg_cnt_defs_r9l};
RegisterDef const reg_def_r10l = {
    "r10l",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r10l,
    80 + REG_REL_OFFSET(8, 0, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r10l,
    reg_cnt_defs_r10l};
RegisterDef const reg_def_r11l = {
    "r11l",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r11l,
    88 + REG_REL_OFFSET(8, 0, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r11l,
    reg_cnt_defs_r11l};
RegisterDef const reg_def_r12l = {
    "r12l",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r12l,
    96 + REG_REL_OFFSET(8, 0, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r12l,
    reg_cnt_defs_r12l};
RegisterDef const reg_def_r13l = {
    "r13l",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r13l,
    104 + REG_REL_OFFSET(8, 0, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r13l,
    reg_cnt_defs_r13l};
RegisterDef const reg_def_r14l = {
    "r14l",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r14l,
    112 + REG_REL_OFFSET(8, 0, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r14l,
    reg_cnt_defs_r14l};
RegisterDef const reg_def_r15l = {
    "r15l",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86_64::reg_lldb_r15l,
    120 + REG_REL_OFFSET(8, 0, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_r15l,
    reg_cnt_defs_r15l};
RegisterDef const reg_def_eflags = {
    "eflags",
    nullptr,
    "flags",
    "flags",
    nullptr,
    32,
    -1,
    ds2::Architecture::X86_64::reg_gdb_eflags,
    -1,
    ds2::Architecture::X86_64::reg_lldb_eflags,
    136,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingCustom, "i386_eflags"},
    0,
    nullptr,
    nullptr};
RegisterDef const reg_def_cs = {
    "cs",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    ds2::Architecture::X86_64::reg_gdb_cs,
    -1,
    ds2::Architecture::X86_64::reg_lldb_cs,
    140,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_ss = {
    "ss",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    ds2::Architecture::X86_64::reg_gdb_ss,
    -1,
    ds2::Architecture::X86_64::reg_lldb_ss,
    144,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_ds = {
    "ds",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    ds2::Architecture::X86_64::reg_gdb_ds,
    -1,
    ds2::Architecture::X86_64::reg_lldb_ds,
    148,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_es = {
    "es",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    ds2::Architecture::X86_64::reg_gdb_es,
    -1,
    ds2::Architecture::X86_64::reg_lldb_es,
    152,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_fs = {
    "fs",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    ds2::Architecture::X86_64::reg_gdb_fs,
    -1,
    ds2::Architecture::X86_64::reg_lldb_fs,
    156,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_gs = {
    "gs",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    ds2::Architecture::X86_64::reg_gdb_gs,
    -1,
    ds2::Architecture::X86_64::reg_lldb_gs,
    160,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_st0 = {
    "st0",
    "stmm0",
    nullptr,
    nullptr,
    nullptr,
    80,
    ds2::Architecture::X86_64::reg_dwarf_st0,
    ds2::Architecture::X86_64::reg_gdb_st0,
    ds2::Architecture::X86_64::reg_ehframe_st0,
    ds2::Architecture::X86_64::reg_lldb_st0,
    200,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingX87Extension, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_st1 = {
    "st1",
    "stmm1",
    nullptr,
    nullptr,
    nullptr,
    80,
    ds2::Architecture::X86_64::reg_dwarf_st1,
    ds2::Architecture::X86_64::reg_gdb_st1,
    ds2::Architecture::X86_64::reg_ehframe_st1,
    ds2::Architecture::X86_64::reg_lldb_st1,
    216,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingX87Extension, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_st2 = {
    "st2",
    "stmm2",
    nullptr,
    nullptr,
    nullptr,
    80,
    ds2::Architecture::X86_64::reg_dwarf_st2,
    ds2::Architecture::X86_64::reg_gdb_st2,
    ds2::Architecture::X86_64::reg_ehframe_st2,
    ds2::Architecture::X86_64::reg_lldb_st2,
    232,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingX87Extension, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_st3 = {
    "st3",
    "stmm3",
    nullptr,
    nullptr,
    nullptr,
    80,
    ds2::Architecture::X86_64::reg_dwarf_st3,
    ds2::Architecture::X86_64::reg_gdb_st3,
    ds2::Architecture::X86_64::reg_ehframe_st3,
    ds2::Architecture::X86_64::reg_lldb_st3,
    248,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingX87Extension, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_st4 = {
    "st4",
    "stmm4",
    nullptr,
    nullptr,
    nullptr,
    80,
    ds2::Architecture::X86_64::reg_dwarf_st4,
    ds2::Architecture::X86_64::reg_gdb_st4,
    ds2::Architecture::X86_64::reg_ehframe_st4,
    ds2::Architecture::X86_64::reg_lldb_st4,
    264,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingX87Extension, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_st5 = {
    "st5",
    "stmm5",
    nullptr,
    nullptr,
    nullptr,
    80,
    ds2::Architecture::X86_64::reg_dwarf_st5,
    ds2::Architecture::X86_64::reg_gdb_st5,
    ds2::Architecture::X86_64::reg_ehframe_st5,
    ds2::Architecture::X86_64::reg_lldb_st5,
    280,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingX87Extension, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_st6 = {
    "st6",
    "stmm6",
    nullptr,
    nullptr,
    nullptr,
    80,
    ds2::Architecture::X86_64::reg_dwarf_st6,
    ds2::Architecture::X86_64::reg_gdb_st6,
    ds2::Architecture::X86_64::reg_ehframe_st6,
    ds2::Architecture::X86_64::reg_lldb_st6,
    296,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingX87Extension, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_st7 = {
    "st7",
    "stmm7",
    nullptr,
    nullptr,
    nullptr,
    80,
    ds2::Architecture::X86_64::reg_dwarf_st7,
    ds2::Architecture::X86_64::reg_gdb_st7,
    ds2::Architecture::X86_64::reg_ehframe_st7,
    ds2::Architecture::X86_64::reg_lldb_st7,
    312,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingX87Extension, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_fctrl = {
    "fctrl",
    nullptr,
    nullptr,
    nullptr,
    "float",
    16,
    -1,
    ds2::Architecture::X86_64::reg_gdb_fctrl,
    -1,
    ds2::Architecture::X86_64::reg_lldb_fctrl,
    164,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_fstat = {
    "fstat",
    nullptr,
    nullptr,
    nullptr,
    "float",
    16,
    -1,
    ds2::Architecture::X86_64::reg_gdb_fstat,
    -1,
    ds2::Architecture::X86_64::reg_lldb_fstat,
    166,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_ftag = {
    "ftag",
    nullptr,
    nullptr,
    nullptr,
    "float",
    16,
    -1,
    ds2::Architecture::X86_64::reg_gdb_ftag,
    -1,
    ds2::Architecture::X86_64::reg_lldb_ftag,
    168,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_fiseg = {
    "fiseg",
    nullptr,
    nullptr,
    nullptr,
    "float",
    32,
    -1,
    ds2::Architecture::X86_64::reg_gdb_fiseg,
    -1,
    ds2::Architecture::X86_64::reg_lldb_fiseg,
    172,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_fioff = {
    "fioff",
    nullptr,
    nullptr,
    nullptr,
    "float",
    32,
    -1,
    ds2::Architecture::X86_64::reg_gdb_fioff,
    -1,
    ds2::Architecture::X86_64::reg_lldb_fioff,
    176,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_foseg = {
    "foseg",
    nullptr,
    nullptr,
    nullptr,
    "float",
    32,
    -1,
    ds2::Architecture::X86_64::reg_gdb_foseg,
    -1,
    ds2::Architecture::X86_64::reg_lldb_foseg,
    180,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_fooff = {
    "fooff",
    nullptr,
    nullptr,
    nullptr,
    "float",
    32,
    -1,
    ds2::Architecture::X86_64::reg_gdb_fooff,
    -1,
    ds2::Architecture::X86_64::reg_lldb_fooff,
    184,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_fop = {
    "fop",
    nullptr,
    nullptr,
    nullptr,
    "float",
    16,
    -1,
    ds2::Architecture::X86_64::reg_gdb_fop,
    -1,
    ds2::Architecture::X86_64::reg_lldb_fop,
    188,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_mxcsr = {
    "mxcsr",
    nullptr,
    nullptr,
    nullptr,
    "vector",
    32,
    -1,
    ds2::Architecture::X86_64::reg_gdb_mxcsr,
    -1,
    ds2::Architecture::X86_64::reg_lldb_mxcsr,
    192,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingCustom, "i386_mxcsr"},
    0,
    nullptr,
    nullptr};
RegisterDef const reg_def_mxcsrmask = {
    "mxcsrmask",
    nullptr,
    nullptr,
    nullptr,
    "vector",
    32,
    -1,
    ds2::Architecture::X86_64::reg_gdb_mxcsrmask,
    -1,
    ds2::Architecture::X86_64::reg_lldb_mxcsrmask,
    196,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    nullptr,
    nullptr};
RegisterDef const reg_def_ymm0 = {
    "ymm0",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86_64::reg_dwarf_ymm0,
    ds2::Architecture::X86_64::reg_gdb_ymm0,
    ds2::Architecture::X86_64::reg_ehframe_ymm0,
    ds2::Architecture::X86_64::reg_lldb_ymm0,
    336,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm0,
    nullptr};
RegisterDef const reg_def_ymm1 = {
    "ymm1",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86_64::reg_dwarf_ymm1,
    ds2::Architecture::X86_64::reg_gdb_ymm1,
    ds2::Architecture::X86_64::reg_ehframe_ymm1,
    ds2::Architecture::X86_64::reg_lldb_ymm1,
    368,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm1,
    nullptr};
RegisterDef const reg_def_ymm2 = {
    "ymm2",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86_64::reg_dwarf_ymm2,
    ds2::Architecture::X86_64::reg_gdb_ymm2,
    ds2::Architecture::X86_64::reg_ehframe_ymm2,
    ds2::Architecture::X86_64::reg_lldb_ymm2,
    400,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm2,
    nullptr};
RegisterDef const reg_def_ymm3 = {
    "ymm3",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86_64::reg_dwarf_ymm3,
    ds2::Architecture::X86_64::reg_gdb_ymm3,
    ds2::Architecture::X86_64::reg_ehframe_ymm3,
    ds2::Architecture::X86_64::reg_lldb_ymm3,
    432,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm3,
    nullptr};
RegisterDef const reg_def_ymm4 = {
    "ymm4",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86_64::reg_dwarf_ymm4,
    ds2::Architecture::X86_64::reg_gdb_ymm4,
    ds2::Architecture::X86_64::reg_ehframe_ymm4,
    ds2::Architecture::X86_64::reg_lldb_ymm4,
    464,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm4,
    nullptr};
RegisterDef const reg_def_ymm5 = {
    "ymm5",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86_64::reg_dwarf_ymm5,
    ds2::Architecture::X86_64::reg_gdb_ymm5,
    ds2::Architecture::X86_64::reg_ehframe_ymm5,
    ds2::Architecture::X86_64::reg_lldb_ymm5,
    496,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm5,
    nullptr};
RegisterDef const reg_def_ymm6 = {
    "ymm6",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86_64::reg_dwarf_ymm6,
    ds2::Architecture::X86_64::reg_gdb_ymm6,
    ds2::Architecture::X86_64::reg_ehframe_ymm6,
    ds2::Architecture::X86_64::reg_lldb_ymm6,
    528,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm6,
    nullptr};
RegisterDef const reg_def_ymm7 = {
    "ymm7",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86_64::reg_dwarf_ymm7,
    ds2::Architecture::X86_64::reg_gdb_ymm7,
    ds2::Architecture::X86_64::reg_ehframe_ymm7,
    ds2::Architecture::X86_64::reg_lldb_ymm7,
    560,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm7,
    nullptr};
RegisterDef const reg_def_ymm8 = {
    "ymm8",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86_64::reg_dwarf_ymm8,
    ds2::Architecture::X86_64::reg_gdb_ymm8,
    ds2::Architecture::X86_64::reg_ehframe_ymm8,
    ds2::Architecture::X86_64::reg_lldb_ymm8,
    592,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm8,
    nullptr};
RegisterDef const reg_def_ymm9 = {
    "ymm9",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86_64::reg_dwarf_ymm9,
    ds2::Architecture::X86_64::reg_gdb_ymm9,
    ds2::Architecture::X86_64::reg_ehframe_ymm9,
    ds2::Architecture::X86_64::reg_lldb_ymm9,
    624,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm9,
    nullptr};
RegisterDef const reg_def_ymm10 = {
    "ymm10",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86_64::reg_dwarf_ymm10,
    ds2::Architecture::X86_64::reg_gdb_ymm10,
    ds2::Architecture::X86_64::reg_ehframe_ymm10,
    ds2::Architecture::X86_64::reg_lldb_ymm10,
    656,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm10,
    nullptr};
RegisterDef const reg_def_ymm11 = {
    "ymm11",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86_64::reg_dwarf_ymm11,
    ds2::Architecture::X86_64::reg_gdb_ymm11,
    ds2::Architecture::X86_64::reg_ehframe_ymm11,
    ds2::Architecture::X86_64::reg_lldb_ymm11,
    688,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm11,
    nullptr};
RegisterDef const reg_def_ymm12 = {
    "ymm12",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86_64::reg_dwarf_ymm12,
    ds2::Architecture::X86_64::reg_gdb_ymm12,
    ds2::Architecture::X86_64::reg_ehframe_ymm12,
    ds2::Architecture::X86_64::reg_lldb_ymm12,
    720,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm12,
    nullptr};
RegisterDef const reg_def_ymm13 = {
    "ymm13",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86_64::reg_dwarf_ymm13,
    ds2::Architecture::X86_64::reg_gdb_ymm13,
    ds2::Architecture::X86_64::reg_ehframe_ymm13,
    ds2::Architecture::X86_64::reg_lldb_ymm13,
    752,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm13,
    nullptr};
RegisterDef const reg_def_ymm14 = {
    "ymm14",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86_64::reg_dwarf_ymm14,
    ds2::Architecture::X86_64::reg_gdb_ymm14,
    ds2::Architecture::X86_64::reg_ehframe_ymm14,
    ds2::Architecture::X86_64::reg_lldb_ymm14,
    784,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm14,
    nullptr};
RegisterDef const reg_def_ymm15 = {
    "ymm15",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86_64::reg_dwarf_ymm15,
    ds2::Architecture::X86_64::reg_gdb_ymm15,
    ds2::Architecture::X86_64::reg_ehframe_ymm15,
    ds2::Architecture::X86_64::reg_lldb_ymm15,
    816,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm15,
    nullptr};
RegisterDef const reg_def_xmm0 = {
    "xmm0",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86_64::reg_dwarf_xmm0,
    ds2::Architecture::X86_64::reg_gdb_xmm0,
    ds2::Architecture::X86_64::reg_ehframe_xmm0,
    ds2::Architecture::X86_64::reg_lldb_xmm0,
    336 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm0,
    reg_cnt_defs_xmm0};
RegisterDef const reg_def_xmm1 = {
    "xmm1",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86_64::reg_dwarf_xmm1,
    -1,
    ds2::Architecture::X86_64::reg_ehframe_xmm1,
    ds2::Architecture::X86_64::reg_lldb_xmm1,
    368 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm1,
    reg_cnt_defs_xmm1};
RegisterDef const reg_def_xmm2 = {
    "xmm2",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86_64::reg_dwarf_xmm2,
    -1,
    ds2::Architecture::X86_64::reg_ehframe_xmm2,
    ds2::Architecture::X86_64::reg_lldb_xmm2,
    400 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm2,
    reg_cnt_defs_xmm2};
RegisterDef const reg_def_xmm3 = {
    "xmm3",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86_64::reg_dwarf_xmm3,
    -1,
    ds2::Architecture::X86_64::reg_ehframe_xmm3,
    ds2::Architecture::X86_64::reg_lldb_xmm3,
    432 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm3,
    reg_cnt_defs_xmm3};
RegisterDef const reg_def_xmm4 = {
    "xmm4",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86_64::reg_dwarf_xmm4,
    -1,
    ds2::Architecture::X86_64::reg_ehframe_xmm4,
    ds2::Architecture::X86_64::reg_lldb_xmm4,
    464 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm4,
    reg_cnt_defs_xmm4};
RegisterDef const reg_def_xmm5 = {
    "xmm5",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86_64::reg_dwarf_xmm5,
    -1,
    ds2::Architecture::X86_64::reg_ehframe_xmm5,
    ds2::Architecture::X86_64::reg_lldb_xmm5,
    496 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm5,
    reg_cnt_defs_xmm5};
RegisterDef const reg_def_xmm6 = {
    "xmm6",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86_64::reg_dwarf_xmm6,
    -1,
    ds2::Architecture::X86_64::reg_ehframe_xmm6,
    ds2::Architecture::X86_64::reg_lldb_xmm6,
    528 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm6,
    reg_cnt_defs_xmm6};
RegisterDef const reg_def_xmm7 = {
    "xmm7",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86_64::reg_dwarf_xmm7,
    -1,
    ds2::Architecture::X86_64::reg_ehframe_xmm7,
    ds2::Architecture::X86_64::reg_lldb_xmm7,
    560 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm7,
    reg_cnt_defs_xmm7};
RegisterDef const reg_def_xmm8 = {
    "xmm8",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86_64::reg_dwarf_xmm8,
    -1,
    ds2::Architecture::X86_64::reg_ehframe_xmm8,
    ds2::Architecture::X86_64::reg_lldb_xmm8,
    592 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm8,
    reg_cnt_defs_xmm8};
RegisterDef const reg_def_xmm9 = {
    "xmm9",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86_64::reg_dwarf_xmm9,
    -1,
    ds2::Architecture::X86_64::reg_ehframe_xmm9,
    ds2::Architecture::X86_64::reg_lldb_xmm9,
    624 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm9,
    reg_cnt_defs_xmm9};
RegisterDef const reg_def_xmm10 = {
    "xmm10",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86_64::reg_dwarf_xmm10,
    -1,
    ds2::Architecture::X86_64::reg_ehframe_xmm10,
    ds2::Architecture::X86_64::reg_lldb_xmm10,
    656 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm10,
    reg_cnt_defs_xmm10};
RegisterDef const reg_def_xmm11 = {
    "xmm11",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86_64::reg_dwarf_xmm11,
    -1,
    ds2::Architecture::X86_64::reg_ehframe_xmm11,
    ds2::Architecture::X86_64::reg_lldb_xmm11,
    688 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm11,
    reg_cnt_defs_xmm11};
RegisterDef const reg_def_xmm12 = {
    "xmm12",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86_64::reg_dwarf_xmm12,
    -1,
    ds2::Architecture::X86_64::reg_ehframe_xmm12,
    ds2::Architecture::X86_64::reg_lldb_xmm12,
    720 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm12,
    reg_cnt_defs_xmm12};
RegisterDef const reg_def_xmm13 = {
    "xmm13",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86_64::reg_dwarf_xmm13,
    -1,
    ds2::Architecture::X86_64::reg_ehframe_xmm13,
    ds2::Architecture::X86_64::reg_lldb_xmm13,
    752 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm13,
    reg_cnt_defs_xmm13};
RegisterDef const reg_def_xmm14 = {
    "xmm14",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86_64::reg_dwarf_xmm14,
    -1,
    ds2::Architecture::X86_64::reg_ehframe_xmm14,
    ds2::Architecture::X86_64::reg_lldb_xmm14,
    784 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm14,
    reg_cnt_defs_xmm14};
RegisterDef const reg_def_xmm15 = {
    "xmm15",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86_64::reg_dwarf_xmm15,
    -1,
    ds2::Architecture::X86_64::reg_ehframe_xmm15,
    ds2::Architecture::X86_64::reg_lldb_xmm15,
    816 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm15,
    reg_cnt_defs_xmm15};
RegisterDef const reg_def_orig_rax = {
    "orig_rax",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    64,
    -1,
    ds2::Architecture::X86_64::reg_gdb_orig_rax,
    -1,
    -1,
    -1,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingInteger, nullptr},
    0,
    nullptr,
    nullptr};

} // namespace

//
// Public Definitions
//
namespace ds2 {
namespace Architecture {
namespace X86_64 {

LLDBDescriptor const LLDB = {3, lldb_reg_sets};
GDBDescriptor const GDB = {"i386:x86-64", "GNU/Linux", 3, gdb_features};

} // namespace X86_64
} // namespace Architecture
} // namespace ds2
