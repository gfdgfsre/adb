// !!! WARNING !!! THIS FILE WAS AUTOGENERATED !!! DO NOT MODIFY !!!
// !!! WARNING !!! MODIFY INSTEAD: Definitions/X86.json

#include "DebugServer2/Architecture/X86/RegistersDescriptors.h"

using ds2::Architecture::FlagDef;
using ds2::Architecture::FlagSet;
using ds2::Architecture::GDBFeature;
using ds2::Architecture::GDBFeatureEntry;
using ds2::Architecture::GDBVectorDef;
using ds2::Architecture::GDBVectorUnion;
using ds2::Architecture::GDBVectorUnionField;
using ds2::Architecture::LLDBRegisterSet;
using ds2::Architecture::RegisterDef;

#if defined(ENDIAN_BIG)
#define REG_REL_OFFSET(MAXBYTES, RELOFF, REGSIZE) ((MAXBYTES) - ((RELOFF) + (REGSIZE))
#else
#define REG_REL_OFFSET(MAXBYTES, RELOFF, REGSIZE) (RELOFF)
#endif

namespace {

//
// Register Definitions (Forward Declarations)
//

// Register Set (avx-regs)
extern RegisterDef const reg_def_ymm0;
extern RegisterDef const reg_def_ymm1;
extern RegisterDef const reg_def_ymm2;
extern RegisterDef const reg_def_ymm3;
extern RegisterDef const reg_def_ymm4;
extern RegisterDef const reg_def_ymm5;
extern RegisterDef const reg_def_ymm6;
extern RegisterDef const reg_def_ymm7;

// Register Set (eflags)
extern RegisterDef const reg_def_eflags;

// Register Set (gpr)
extern RegisterDef const reg_def_eax;
extern RegisterDef const reg_def_ebx;
extern RegisterDef const reg_def_ecx;
extern RegisterDef const reg_def_edx;
extern RegisterDef const reg_def_esi;
extern RegisterDef const reg_def_edi;
extern RegisterDef const reg_def_ebp;
extern RegisterDef const reg_def_esp;
extern RegisterDef const reg_def_eip;

// Register Set (linux-regs)
extern RegisterDef const reg_def_orig_eax;

// Register Set (pseudo-gpr16)
extern RegisterDef const reg_def_ax;
extern RegisterDef const reg_def_bx;
extern RegisterDef const reg_def_cx;
extern RegisterDef const reg_def_dx;
extern RegisterDef const reg_def_si;
extern RegisterDef const reg_def_di;
extern RegisterDef const reg_def_bp;
extern RegisterDef const reg_def_sp;

// Register Set (pseudo-gpr8h)
extern RegisterDef const reg_def_ah;
extern RegisterDef const reg_def_bh;
extern RegisterDef const reg_def_ch;
extern RegisterDef const reg_def_dh;

// Register Set (pseudo-gpr8l)
extern RegisterDef const reg_def_al;
extern RegisterDef const reg_def_bl;
extern RegisterDef const reg_def_cl;
extern RegisterDef const reg_def_dl;

// Register Set (segs)
extern RegisterDef const reg_def_cs;
extern RegisterDef const reg_def_ss;
extern RegisterDef const reg_def_ds;
extern RegisterDef const reg_def_es;
extern RegisterDef const reg_def_fs;
extern RegisterDef const reg_def_gs;

// Register Set (sse-flags)
extern RegisterDef const reg_def_mxcsr;

// Register Set (sse-mask)
extern RegisterDef const reg_def_mxcsrmask;

// Register Set (sse-regs)
extern RegisterDef const reg_def_xmm0;
extern RegisterDef const reg_def_xmm1;
extern RegisterDef const reg_def_xmm2;
extern RegisterDef const reg_def_xmm3;
extern RegisterDef const reg_def_xmm4;
extern RegisterDef const reg_def_xmm5;
extern RegisterDef const reg_def_xmm6;
extern RegisterDef const reg_def_xmm7;

// Register Set (x87-flags)
extern RegisterDef const reg_def_fctrl;
extern RegisterDef const reg_def_fstat;
extern RegisterDef const reg_def_ftag;
extern RegisterDef const reg_def_fiseg;
extern RegisterDef const reg_def_fioff;
extern RegisterDef const reg_def_foseg;
extern RegisterDef const reg_def_fooff;
extern RegisterDef const reg_def_fop;

// Register Set (x87-regs)
extern RegisterDef const reg_def_st0;
extern RegisterDef const reg_def_st1;
extern RegisterDef const reg_def_st2;
extern RegisterDef const reg_def_st3;
extern RegisterDef const reg_def_st4;
extern RegisterDef const reg_def_st5;
extern RegisterDef const reg_def_st6;
extern RegisterDef const reg_def_st7;

//
// Flag Definitions (Forward Declarations)
//

extern FlagSet const flag_set_eflags;
extern FlagSet const flag_set_mxcsr;

//
// GDB Vector Definitions (Forward Declarations)
//

extern GDBVectorDef const vec_def_v4f;
extern GDBVectorDef const vec_def_v2d;
extern GDBVectorDef const vec_def_v16i8;
extern GDBVectorDef const vec_def_v8i16;
extern GDBVectorDef const vec_def_v4i32;
extern GDBVectorDef const vec_def_v2i64;
extern GDBVectorUnion const vec_def_vec128;

//
// LLDB Register Sets
//

// LLDB Register Set (General Purpose Registers)

RegisterDef const *const lldb_reg_defs_0[] = {
    &reg_def_eax, &reg_def_ebx, &reg_def_ecx, &reg_def_edx, &reg_def_esi,
    &reg_def_edi, &reg_def_ebp, &reg_def_esp, &reg_def_eip, &reg_def_eflags,
    &reg_def_cs,  &reg_def_ss,  &reg_def_ds,  &reg_def_es,  &reg_def_fs,
    &reg_def_gs,  &reg_def_ax,  &reg_def_bx,  &reg_def_cx,  &reg_def_dx,
    &reg_def_si,  &reg_def_di,  &reg_def_bp,  &reg_def_sp,  &reg_def_ah,
    &reg_def_bh,  &reg_def_ch,  &reg_def_dh,  &reg_def_al,  &reg_def_bl,
    &reg_def_cl,  &reg_def_dl,  nullptr};

LLDBRegisterSet const lldb_reg_set_0 = {"General Purpose Registers", 32,
                                        lldb_reg_defs_0};

// LLDB Register Set (Floating Point Registers)

RegisterDef const *const lldb_reg_defs_1[] = {
    &reg_def_fctrl, &reg_def_fstat,     &reg_def_ftag,  &reg_def_fiseg,
    &reg_def_fioff, &reg_def_foseg,     &reg_def_fooff, &reg_def_fop,
    &reg_def_mxcsr, &reg_def_mxcsrmask, &reg_def_st0,   &reg_def_st1,
    &reg_def_st2,   &reg_def_st3,       &reg_def_st4,   &reg_def_st5,
    &reg_def_st6,   &reg_def_st7,       &reg_def_xmm0,  &reg_def_xmm1,
    &reg_def_xmm2,  &reg_def_xmm3,      &reg_def_xmm4,  &reg_def_xmm5,
    &reg_def_xmm6,  &reg_def_xmm7,      nullptr};

LLDBRegisterSet const lldb_reg_set_1 = {"Floating Point Registers", 26,
                                        lldb_reg_defs_1};

// LLDB Register Set (Advanced Vector Extensions)

RegisterDef const *const lldb_reg_defs_2[] = {
    &reg_def_ymm0, &reg_def_ymm1, &reg_def_ymm2, &reg_def_ymm3, &reg_def_ymm4,
    &reg_def_ymm5, &reg_def_ymm6, &reg_def_ymm7, nullptr};

LLDBRegisterSet const lldb_reg_set_2 = {"Advanced Vector Extensions", 8,
                                        lldb_reg_defs_2};

LLDBRegisterSet const *const lldb_reg_sets[] = {
    &lldb_reg_set_0, &lldb_reg_set_1, &lldb_reg_set_2, nullptr};

//
// GDB Features
//

// GDB Feature (org.gnu.gdb.i386.core)
GDBFeatureEntry const gdb_fents_org_gnu_gdb_i386_core[] = {
    {ds2::Architecture::kGDBFeatureTypeFlags, &flag_set_eflags},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_eax},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_ebx},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_ecx},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_edx},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_esi},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_edi},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_ebp},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_esp},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_eip},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_eflags},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_cs},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_ss},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_ds},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_es},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_fs},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_gs},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_st0},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_st1},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_st2},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_st3},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_st4},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_st5},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_st6},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_st7},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_fctrl},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_fstat},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_ftag},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_fiseg},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_fioff},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_foseg},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_fooff},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_fop},
    {ds2::Architecture::kGDBFeatureTypeNone, nullptr}};
GDBFeature const gdb_feat_org_gnu_gdb_i386_core = {
    "org.gnu.gdb.i386.core", "i386-core.xml", 33,
    gdb_fents_org_gnu_gdb_i386_core};

// GDB Feature (org.gnu.gdb.i386.sse)
GDBFeatureEntry const gdb_fents_org_gnu_gdb_i386_sse[] = {
    {ds2::Architecture::kGDBFeatureTypeVector, &vec_def_v4f},
    {ds2::Architecture::kGDBFeatureTypeVector, &vec_def_v2d},
    {ds2::Architecture::kGDBFeatureTypeVector, &vec_def_v16i8},
    {ds2::Architecture::kGDBFeatureTypeVector, &vec_def_v8i16},
    {ds2::Architecture::kGDBFeatureTypeVector, &vec_def_v4i32},
    {ds2::Architecture::kGDBFeatureTypeVector, &vec_def_v2i64},
    {ds2::Architecture::kGDBFeatureTypeUnion, &vec_def_vec128},
    {ds2::Architecture::kGDBFeatureTypeFlags, &flag_set_mxcsr},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm0},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm1},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm2},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm3},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm4},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm5},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm6},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_xmm7},
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_mxcsr},
    {ds2::Architecture::kGDBFeatureTypeNone, nullptr}};
GDBFeature const gdb_feat_org_gnu_gdb_i386_sse = {
    "org.gnu.gdb.i386.sse", "i386-sse.xml", 17, gdb_fents_org_gnu_gdb_i386_sse};

// GDB Feature (org.gnu.gdb.i386.linux)
GDBFeatureEntry const gdb_fents_org_gnu_gdb_i386_linux[] = {
    {ds2::Architecture::kGDBFeatureTypeRegister, &reg_def_orig_eax},
    {ds2::Architecture::kGDBFeatureTypeNone, nullptr}};
GDBFeature const gdb_feat_org_gnu_gdb_i386_linux = {
    "org.gnu.gdb.i386.linux", "i386-linux.xml", 1,
    gdb_fents_org_gnu_gdb_i386_linux};

// GDB Features (all)
GDBFeature const *const gdb_features[] = {
    &gdb_feat_org_gnu_gdb_i386_core, &gdb_feat_org_gnu_gdb_i386_sse,
    &gdb_feat_org_gnu_gdb_i386_linux, nullptr};

//
// LLDB Register Invalidation/Container Sets
//

RegisterDef const *const reg_inv_defs_eax[] = {
    &reg_def_eax, &reg_def_ax, &reg_def_ah, &reg_def_al, nullptr};
RegisterDef const *const reg_inv_defs_ebx[] = {
    &reg_def_ebx, &reg_def_bx, &reg_def_bh, &reg_def_bl, nullptr};
RegisterDef const *const reg_inv_defs_ecx[] = {
    &reg_def_ecx, &reg_def_cx, &reg_def_ch, &reg_def_cl, nullptr};
RegisterDef const *const reg_inv_defs_edx[] = {
    &reg_def_edx, &reg_def_dx, &reg_def_dh, &reg_def_dl, nullptr};
RegisterDef const *const reg_inv_defs_esi[] = {&reg_def_esi, &reg_def_si,
                                               nullptr};
RegisterDef const *const reg_inv_defs_edi[] = {&reg_def_edi, &reg_def_di,
                                               nullptr};
RegisterDef const *const reg_inv_defs_ebp[] = {&reg_def_ebp, &reg_def_bp,
                                               nullptr};
RegisterDef const *const reg_inv_defs_esp[] = {&reg_def_esp, &reg_def_sp,
                                               nullptr};
RegisterDef const *const reg_inv_defs_ax[] = {
    &reg_def_eax, &reg_def_ax, &reg_def_ah, &reg_def_al, nullptr};
RegisterDef const *const reg_cnt_defs_ax[] = {&reg_def_eax, nullptr};
RegisterDef const *const reg_inv_defs_bx[] = {
    &reg_def_ebx, &reg_def_bx, &reg_def_bh, &reg_def_bl, nullptr};
RegisterDef const *const reg_cnt_defs_bx[] = {&reg_def_ebx, nullptr};
RegisterDef const *const reg_inv_defs_cx[] = {
    &reg_def_ecx, &reg_def_cx, &reg_def_ch, &reg_def_cl, nullptr};
RegisterDef const *const reg_cnt_defs_cx[] = {&reg_def_ecx, nullptr};
RegisterDef const *const reg_inv_defs_dx[] = {
    &reg_def_edx, &reg_def_dx, &reg_def_dh, &reg_def_dl, nullptr};
RegisterDef const *const reg_cnt_defs_dx[] = {&reg_def_edx, nullptr};
RegisterDef const *const reg_inv_defs_si[] = {&reg_def_esi, &reg_def_si,
                                              nullptr};
RegisterDef const *const reg_cnt_defs_si[] = {&reg_def_esi, nullptr};
RegisterDef const *const reg_inv_defs_di[] = {&reg_def_edi, &reg_def_di,
                                              nullptr};
RegisterDef const *const reg_cnt_defs_di[] = {&reg_def_edi, nullptr};
RegisterDef const *const reg_inv_defs_bp[] = {&reg_def_ebp, &reg_def_bp,
                                              nullptr};
RegisterDef const *const reg_cnt_defs_bp[] = {&reg_def_ebp, nullptr};
RegisterDef const *const reg_inv_defs_sp[] = {&reg_def_esp, &reg_def_sp,
                                              nullptr};
RegisterDef const *const reg_cnt_defs_sp[] = {&reg_def_esp, nullptr};
RegisterDef const *const reg_inv_defs_ah[] = {
    &reg_def_eax, &reg_def_ax, &reg_def_ah, &reg_def_al, nullptr};
RegisterDef const *const reg_cnt_defs_ah[] = {&reg_def_eax, nullptr};
RegisterDef const *const reg_inv_defs_bh[] = {
    &reg_def_ebx, &reg_def_bx, &reg_def_bh, &reg_def_bl, nullptr};
RegisterDef const *const reg_cnt_defs_bh[] = {&reg_def_ebx, nullptr};
RegisterDef const *const reg_inv_defs_ch[] = {
    &reg_def_ecx, &reg_def_cx, &reg_def_ch, &reg_def_cl, nullptr};
RegisterDef const *const reg_cnt_defs_ch[] = {&reg_def_ecx, nullptr};
RegisterDef const *const reg_inv_defs_dh[] = {
    &reg_def_edx, &reg_def_dx, &reg_def_dh, &reg_def_dl, nullptr};
RegisterDef const *const reg_cnt_defs_dh[] = {&reg_def_edx, nullptr};
RegisterDef const *const reg_inv_defs_al[] = {
    &reg_def_eax, &reg_def_ax, &reg_def_ah, &reg_def_al, nullptr};
RegisterDef const *const reg_cnt_defs_al[] = {&reg_def_eax, nullptr};
RegisterDef const *const reg_inv_defs_bl[] = {
    &reg_def_ebx, &reg_def_bx, &reg_def_bh, &reg_def_bl, nullptr};
RegisterDef const *const reg_cnt_defs_bl[] = {&reg_def_ebx, nullptr};
RegisterDef const *const reg_inv_defs_cl[] = {
    &reg_def_ecx, &reg_def_cx, &reg_def_ch, &reg_def_cl, nullptr};
RegisterDef const *const reg_cnt_defs_cl[] = {&reg_def_ecx, nullptr};
RegisterDef const *const reg_inv_defs_dl[] = {
    &reg_def_edx, &reg_def_dx, &reg_def_dh, &reg_def_dl, nullptr};
RegisterDef const *const reg_cnt_defs_dl[] = {&reg_def_edx, nullptr};
RegisterDef const *const reg_inv_defs_ymm0[] = {&reg_def_ymm0, &reg_def_xmm0,
                                                nullptr};
RegisterDef const *const reg_inv_defs_ymm1[] = {&reg_def_ymm1, &reg_def_xmm1,
                                                nullptr};
RegisterDef const *const reg_inv_defs_ymm2[] = {&reg_def_ymm2, &reg_def_xmm2,
                                                nullptr};
RegisterDef const *const reg_inv_defs_ymm3[] = {&reg_def_ymm3, &reg_def_xmm3,
                                                nullptr};
RegisterDef const *const reg_inv_defs_ymm4[] = {&reg_def_ymm4, &reg_def_xmm4,
                                                nullptr};
RegisterDef const *const reg_inv_defs_ymm5[] = {&reg_def_ymm5, &reg_def_xmm5,
                                                nullptr};
RegisterDef const *const reg_inv_defs_ymm6[] = {&reg_def_ymm6, &reg_def_xmm6,
                                                nullptr};
RegisterDef const *const reg_inv_defs_ymm7[] = {&reg_def_ymm7, &reg_def_xmm7,
                                                nullptr};
RegisterDef const *const reg_inv_defs_xmm0[] = {&reg_def_ymm0, &reg_def_xmm0,
                                                nullptr};
RegisterDef const *const reg_cnt_defs_xmm0[] = {&reg_def_ymm0, nullptr};
RegisterDef const *const reg_inv_defs_xmm1[] = {&reg_def_ymm1, &reg_def_xmm1,
                                                nullptr};
RegisterDef const *const reg_cnt_defs_xmm1[] = {&reg_def_ymm1, nullptr};
RegisterDef const *const reg_inv_defs_xmm2[] = {&reg_def_ymm2, &reg_def_xmm2,
                                                nullptr};
RegisterDef const *const reg_cnt_defs_xmm2[] = {&reg_def_ymm2, nullptr};
RegisterDef const *const reg_inv_defs_xmm3[] = {&reg_def_ymm3, &reg_def_xmm3,
                                                nullptr};
RegisterDef const *const reg_cnt_defs_xmm3[] = {&reg_def_ymm3, nullptr};
RegisterDef const *const reg_inv_defs_xmm4[] = {&reg_def_ymm4, &reg_def_xmm4,
                                                nullptr};
RegisterDef const *const reg_cnt_defs_xmm4[] = {&reg_def_ymm4, nullptr};
RegisterDef const *const reg_inv_defs_xmm5[] = {&reg_def_ymm5, &reg_def_xmm5,
                                                nullptr};
RegisterDef const *const reg_cnt_defs_xmm5[] = {&reg_def_ymm5, nullptr};
RegisterDef const *const reg_inv_defs_xmm6[] = {&reg_def_ymm6, &reg_def_xmm6,
                                                nullptr};
RegisterDef const *const reg_cnt_defs_xmm6[] = {&reg_def_ymm6, nullptr};
RegisterDef const *const reg_inv_defs_xmm7[] = {&reg_def_ymm7, &reg_def_xmm7,
                                                nullptr};
RegisterDef const *const reg_cnt_defs_xmm7[] = {&reg_def_ymm7, nullptr};

//
// Flag Sets
//

// Flag Set (eflags)
FlagDef const flag_defs_eflags[] = {
    {"CF", 0, 1},  {"", 1, 1},     {"PF", 2, 1},   {"AF", 4, 1},
    {"ZF", 6, 1},  {"SF", 7, 1},   {"TF", 8, 1},   {"IF", 9, 1},
    {"DF", 10, 1}, {"OF", 11, 1},  {"NT", 14, 1},  {"RF", 16, 1},
    {"VM", 17, 1}, {"AC", 18, 1},  {"VIF", 19, 1}, {"VIP", 20, 1},
    {"ID", 21, 1}, {nullptr, 0, 0}};

FlagSet const flag_set_eflags = {"i386_eflags", 32, 17, flag_defs_eflags};

// Flag Set (mxcsr)
FlagDef const flag_defs_mxcsr[] = {
    {"IE", 0, 1},  {"DE", 1, 1},  {"ZE", 2, 1},   {"OE", 3, 1},
    {"UE", 4, 1},  {"PE", 5, 1},  {"DAZ", 6, 1},  {"IM", 7, 1},
    {"DM", 8, 1},  {"ZM", 9, 1},  {"OM", 10, 1},  {"UM", 11, 1},
    {"PM", 12, 1}, {"FZ", 15, 1}, {nullptr, 0, 0}};

FlagSet const flag_set_mxcsr = {"i386_mxcsr", 32, 14, flag_defs_mxcsr};

//
// GDB Vector Set
//

GDBVectorDef const vec_def_v4f = {"v4f", 128, -1,
                                  ds2::Architecture::kGDBEncodingIEEESingle};
GDBVectorDef const vec_def_v2d = {"v2d", 128, -1,
                                  ds2::Architecture::kGDBEncodingIEEEDouble};
GDBVectorDef const vec_def_v16i8 = {"v16i8", 128, 8,
                                    ds2::Architecture::kGDBEncodingInteger};
GDBVectorDef const vec_def_v8i16 = {"v8i16", 128, 16,
                                    ds2::Architecture::kGDBEncodingInteger};
GDBVectorDef const vec_def_v4i32 = {"v4i32", 128, 32,
                                    ds2::Architecture::kGDBEncodingInteger};
GDBVectorDef const vec_def_v2i64 = {"v2i64", 128, 64,
                                    ds2::Architecture::kGDBEncodingInteger};
GDBVectorUnionField const vec_unf_vec128[] = {
    {"v4_float", ds2::Architecture::kGDBEncodingCustom, &vec_def_v4f},
    {"v2_double", ds2::Architecture::kGDBEncodingCustom, &vec_def_v2d},
    {"v16_int8", ds2::Architecture::kGDBEncodingCustom, &vec_def_v16i8},
    {"v8_int16", ds2::Architecture::kGDBEncodingCustom, &vec_def_v8i16},
    {"v4_int32", ds2::Architecture::kGDBEncodingCustom, &vec_def_v4i32},
    {"v2_int64", ds2::Architecture::kGDBEncodingCustom, &vec_def_v2i64},
    {"uint128", ds2::Architecture::kGDBEncodingUInt128, nullptr},
    {nullptr, ds2::Architecture::kGDBEncodingUnknown, nullptr}};
GDBVectorUnion const vec_def_vec128 = {"vec128", 7, vec_unf_vec128};

//
// Register Definitions
//

RegisterDef const reg_def_eax = {
    "eax",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    ds2::Architecture::X86::reg_dwarf_eax,
    ds2::Architecture::X86::reg_gdb_eax,
    ds2::Architecture::X86::reg_ehframe_eax,
    ds2::Architecture::X86::reg_lldb_eax,
    0,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_eax,
    nullptr};
RegisterDef const reg_def_ebx = {
    "ebx",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    ds2::Architecture::X86::reg_dwarf_ebx,
    ds2::Architecture::X86::reg_gdb_ebx,
    ds2::Architecture::X86::reg_ehframe_ebx,
    ds2::Architecture::X86::reg_lldb_ebx,
    4,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_ebx,
    nullptr};
RegisterDef const reg_def_ecx = {
    "ecx",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    ds2::Architecture::X86::reg_dwarf_ecx,
    ds2::Architecture::X86::reg_gdb_ecx,
    ds2::Architecture::X86::reg_ehframe_ecx,
    ds2::Architecture::X86::reg_lldb_ecx,
    8,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_ecx,
    nullptr};
RegisterDef const reg_def_edx = {
    "edx",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    ds2::Architecture::X86::reg_dwarf_edx,
    ds2::Architecture::X86::reg_gdb_edx,
    ds2::Architecture::X86::reg_ehframe_edx,
    ds2::Architecture::X86::reg_lldb_edx,
    12,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_edx,
    nullptr};
RegisterDef const reg_def_esi = {
    "esi",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    ds2::Architecture::X86::reg_dwarf_esi,
    ds2::Architecture::X86::reg_gdb_esi,
    ds2::Architecture::X86::reg_ehframe_esi,
    ds2::Architecture::X86::reg_lldb_esi,
    16,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_esi,
    nullptr};
RegisterDef const reg_def_edi = {
    "edi",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    ds2::Architecture::X86::reg_dwarf_edi,
    ds2::Architecture::X86::reg_gdb_edi,
    ds2::Architecture::X86::reg_ehframe_edi,
    ds2::Architecture::X86::reg_lldb_edi,
    20,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_edi,
    nullptr};
RegisterDef const reg_def_ebp = {
    "ebp",
    nullptr,
    "fp",
    "fp",
    nullptr,
    32,
    ds2::Architecture::X86::reg_dwarf_ebp,
    ds2::Architecture::X86::reg_gdb_ebp,
    ds2::Architecture::X86::reg_ehframe_ebp,
    ds2::Architecture::X86::reg_lldb_ebp,
    24,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingDataPointer, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_ebp,
    nullptr};
RegisterDef const reg_def_esp = {
    "esp",
    nullptr,
    "sp",
    "sp",
    nullptr,
    32,
    ds2::Architecture::X86::reg_dwarf_esp,
    ds2::Architecture::X86::reg_gdb_esp,
    ds2::Architecture::X86::reg_ehframe_esp,
    ds2::Architecture::X86::reg_lldb_esp,
    28,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingDataPointer, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    reg_inv_defs_esp,
    nullptr};
RegisterDef const reg_def_eip = {
    "eip",
    nullptr,
    "pc",
    "pc",
    nullptr,
    32,
    ds2::Architecture::X86::reg_dwarf_eip,
    ds2::Architecture::X86::reg_gdb_eip,
    ds2::Architecture::X86::reg_ehframe_eip,
    ds2::Architecture::X86::reg_lldb_eip,
    32,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingCodePointer, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_ax = {
    "ax",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86::reg_lldb_ax,
    0 + REG_REL_OFFSET(4, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ax,
    reg_cnt_defs_ax};
RegisterDef const reg_def_bx = {
    "bx",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86::reg_lldb_bx,
    4 + REG_REL_OFFSET(4, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_bx,
    reg_cnt_defs_bx};
RegisterDef const reg_def_cx = {
    "cx",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86::reg_lldb_cx,
    8 + REG_REL_OFFSET(4, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_cx,
    reg_cnt_defs_cx};
RegisterDef const reg_def_dx = {
    "dx",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86::reg_lldb_dx,
    12 + REG_REL_OFFSET(4, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_dx,
    reg_cnt_defs_dx};
RegisterDef const reg_def_si = {
    "si",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86::reg_lldb_si,
    16 + REG_REL_OFFSET(4, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_si,
    reg_cnt_defs_si};
RegisterDef const reg_def_di = {
    "di",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86::reg_lldb_di,
    20 + REG_REL_OFFSET(4, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_di,
    reg_cnt_defs_di};
RegisterDef const reg_def_bp = {
    "bp",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86::reg_lldb_bp,
    24 + REG_REL_OFFSET(4, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_bp,
    reg_cnt_defs_bp};
RegisterDef const reg_def_sp = {
    "sp",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    16,
    -1,
    -1,
    -1,
    ds2::Architecture::X86::reg_lldb_sp,
    28 + REG_REL_OFFSET(4, 0, 2),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_sp,
    reg_cnt_defs_sp};
RegisterDef const reg_def_ah = {
    "ah",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86::reg_lldb_ah,
    0 + REG_REL_OFFSET(4, 1, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ah,
    reg_cnt_defs_ah};
RegisterDef const reg_def_bh = {
    "bh",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86::reg_lldb_bh,
    4 + REG_REL_OFFSET(4, 1, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_bh,
    reg_cnt_defs_bh};
RegisterDef const reg_def_ch = {
    "ch",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86::reg_lldb_ch,
    8 + REG_REL_OFFSET(4, 1, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ch,
    reg_cnt_defs_ch};
RegisterDef const reg_def_dh = {
    "dh",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86::reg_lldb_dh,
    12 + REG_REL_OFFSET(4, 1, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_dh,
    reg_cnt_defs_dh};
RegisterDef const reg_def_al = {
    "al",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86::reg_lldb_al,
    0 + REG_REL_OFFSET(4, 0, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_al,
    reg_cnt_defs_al};
RegisterDef const reg_def_bl = {
    "bl",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86::reg_lldb_bl,
    4 + REG_REL_OFFSET(4, 0, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_bl,
    reg_cnt_defs_bl};
RegisterDef const reg_def_cl = {
    "cl",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86::reg_lldb_cl,
    8 + REG_REL_OFFSET(4, 0, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_cl,
    reg_cnt_defs_cl};
RegisterDef const reg_def_dl = {
    "dl",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    8,
    -1,
    -1,
    -1,
    ds2::Architecture::X86::reg_lldb_dl,
    12 + REG_REL_OFFSET(4, 0, 1),
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_dl,
    reg_cnt_defs_dl};
RegisterDef const reg_def_eflags = {
    "eflags",
    nullptr,
    "flags",
    "flags",
    nullptr,
    32,
    -1,
    ds2::Architecture::X86::reg_gdb_eflags,
    -1,
    ds2::Architecture::X86::reg_lldb_eflags,
    36,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingCustom, "i386_eflags"},
    0,
    nullptr,
    nullptr};
RegisterDef const reg_def_cs = {
    "cs",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    ds2::Architecture::X86::reg_gdb_cs,
    -1,
    ds2::Architecture::X86::reg_lldb_cs,
    40,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_ss = {
    "ss",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    ds2::Architecture::X86::reg_gdb_ss,
    -1,
    ds2::Architecture::X86::reg_lldb_ss,
    44,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_ds = {
    "ds",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    ds2::Architecture::X86::reg_gdb_ds,
    -1,
    ds2::Architecture::X86::reg_lldb_ds,
    48,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_es = {
    "es",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    ds2::Architecture::X86::reg_gdb_es,
    -1,
    ds2::Architecture::X86::reg_lldb_es,
    52,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_fs = {
    "fs",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    ds2::Architecture::X86::reg_gdb_fs,
    -1,
    ds2::Architecture::X86::reg_lldb_fs,
    56,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_gs = {
    "gs",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    ds2::Architecture::X86::reg_gdb_gs,
    -1,
    ds2::Architecture::X86::reg_lldb_gs,
    60,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_st0 = {
    "st0",
    "stmm0",
    nullptr,
    nullptr,
    nullptr,
    80,
    ds2::Architecture::X86::reg_dwarf_st0,
    ds2::Architecture::X86::reg_gdb_st0,
    ds2::Architecture::X86::reg_ehframe_st0,
    ds2::Architecture::X86::reg_lldb_st0,
    104,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingX87Extension, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_st1 = {
    "st1",
    "stmm1",
    nullptr,
    nullptr,
    nullptr,
    80,
    ds2::Architecture::X86::reg_dwarf_st1,
    ds2::Architecture::X86::reg_gdb_st1,
    ds2::Architecture::X86::reg_ehframe_st1,
    ds2::Architecture::X86::reg_lldb_st1,
    120,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingX87Extension, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_st2 = {
    "st2",
    "stmm2",
    nullptr,
    nullptr,
    nullptr,
    80,
    ds2::Architecture::X86::reg_dwarf_st2,
    ds2::Architecture::X86::reg_gdb_st2,
    ds2::Architecture::X86::reg_ehframe_st2,
    ds2::Architecture::X86::reg_lldb_st2,
    136,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingX87Extension, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_st3 = {
    "st3",
    "stmm3",
    nullptr,
    nullptr,
    nullptr,
    80,
    ds2::Architecture::X86::reg_dwarf_st3,
    ds2::Architecture::X86::reg_gdb_st3,
    ds2::Architecture::X86::reg_ehframe_st3,
    ds2::Architecture::X86::reg_lldb_st3,
    152,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingX87Extension, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_st4 = {
    "st4",
    "stmm4",
    nullptr,
    nullptr,
    nullptr,
    80,
    ds2::Architecture::X86::reg_dwarf_st4,
    ds2::Architecture::X86::reg_gdb_st4,
    ds2::Architecture::X86::reg_ehframe_st4,
    ds2::Architecture::X86::reg_lldb_st4,
    168,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingX87Extension, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_st5 = {
    "st5",
    "stmm5",
    nullptr,
    nullptr,
    nullptr,
    80,
    ds2::Architecture::X86::reg_dwarf_st5,
    ds2::Architecture::X86::reg_gdb_st5,
    ds2::Architecture::X86::reg_ehframe_st5,
    ds2::Architecture::X86::reg_lldb_st5,
    184,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingX87Extension, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_st6 = {
    "st6",
    "stmm6",
    nullptr,
    nullptr,
    nullptr,
    80,
    ds2::Architecture::X86::reg_dwarf_st6,
    ds2::Architecture::X86::reg_gdb_st6,
    ds2::Architecture::X86::reg_ehframe_st6,
    ds2::Architecture::X86::reg_lldb_st6,
    200,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingX87Extension, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_st7 = {
    "st7",
    "stmm7",
    nullptr,
    nullptr,
    nullptr,
    80,
    ds2::Architecture::X86::reg_dwarf_st7,
    ds2::Architecture::X86::reg_gdb_st7,
    ds2::Architecture::X86::reg_ehframe_st7,
    ds2::Architecture::X86::reg_lldb_st7,
    216,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingX87Extension, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_fctrl = {
    "fctrl",
    nullptr,
    nullptr,
    nullptr,
    "float",
    16,
    -1,
    ds2::Architecture::X86::reg_gdb_fctrl,
    -1,
    ds2::Architecture::X86::reg_lldb_fctrl,
    64,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_fstat = {
    "fstat",
    nullptr,
    nullptr,
    nullptr,
    "float",
    16,
    -1,
    ds2::Architecture::X86::reg_gdb_fstat,
    -1,
    ds2::Architecture::X86::reg_lldb_fstat,
    66,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_ftag = {
    "ftag",
    nullptr,
    nullptr,
    nullptr,
    "float",
    16,
    -1,
    ds2::Architecture::X86::reg_gdb_ftag,
    -1,
    ds2::Architecture::X86::reg_lldb_ftag,
    68,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_fiseg = {
    "fiseg",
    nullptr,
    nullptr,
    nullptr,
    "float",
    32,
    -1,
    ds2::Architecture::X86::reg_gdb_fiseg,
    -1,
    ds2::Architecture::X86::reg_lldb_fiseg,
    72,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_fioff = {
    "fioff",
    nullptr,
    nullptr,
    nullptr,
    "float",
    32,
    -1,
    ds2::Architecture::X86::reg_gdb_fioff,
    -1,
    ds2::Architecture::X86::reg_lldb_fioff,
    76,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_foseg = {
    "foseg",
    nullptr,
    nullptr,
    nullptr,
    "float",
    32,
    -1,
    ds2::Architecture::X86::reg_gdb_foseg,
    -1,
    ds2::Architecture::X86::reg_lldb_foseg,
    80,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_fooff = {
    "fooff",
    nullptr,
    nullptr,
    nullptr,
    "float",
    32,
    -1,
    ds2::Architecture::X86::reg_gdb_fooff,
    -1,
    ds2::Architecture::X86::reg_lldb_fooff,
    84,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_fop = {
    "fop",
    nullptr,
    nullptr,
    nullptr,
    "float",
    16,
    -1,
    ds2::Architecture::X86::reg_gdb_fop,
    -1,
    ds2::Architecture::X86::reg_lldb_fop,
    88,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingInteger, nullptr},
    ds2::Architecture::kRegisterDefNoGDBRegisterNumber,
    nullptr,
    nullptr};
RegisterDef const reg_def_mxcsr = {
    "mxcsr",
    nullptr,
    nullptr,
    nullptr,
    "vector",
    32,
    -1,
    ds2::Architecture::X86::reg_gdb_mxcsr,
    -1,
    ds2::Architecture::X86::reg_lldb_mxcsr,
    92,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingCustom, "i386_mxcsr"},
    0,
    nullptr,
    nullptr};
RegisterDef const reg_def_mxcsrmask = {
    "mxcsrmask",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    -1,
    -1,
    ds2::Architecture::X86::reg_lldb_mxcsrmask,
    96,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    nullptr,
    nullptr};
RegisterDef const reg_def_ymm0 = {
    "ymm0",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86::reg_dwarf_ymm0,
    ds2::Architecture::X86::reg_gdb_ymm0,
    ds2::Architecture::X86::reg_ehframe_ymm0,
    ds2::Architecture::X86::reg_lldb_ymm0,
    240,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm0,
    nullptr};
RegisterDef const reg_def_ymm1 = {
    "ymm1",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86::reg_dwarf_ymm1,
    ds2::Architecture::X86::reg_gdb_ymm1,
    ds2::Architecture::X86::reg_ehframe_ymm1,
    ds2::Architecture::X86::reg_lldb_ymm1,
    272,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm1,
    nullptr};
RegisterDef const reg_def_ymm2 = {
    "ymm2",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86::reg_dwarf_ymm2,
    ds2::Architecture::X86::reg_gdb_ymm2,
    ds2::Architecture::X86::reg_ehframe_ymm2,
    ds2::Architecture::X86::reg_lldb_ymm2,
    304,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm2,
    nullptr};
RegisterDef const reg_def_ymm3 = {
    "ymm3",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86::reg_dwarf_ymm3,
    ds2::Architecture::X86::reg_gdb_ymm3,
    ds2::Architecture::X86::reg_ehframe_ymm3,
    ds2::Architecture::X86::reg_lldb_ymm3,
    336,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm3,
    nullptr};
RegisterDef const reg_def_ymm4 = {
    "ymm4",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86::reg_dwarf_ymm4,
    ds2::Architecture::X86::reg_gdb_ymm4,
    ds2::Architecture::X86::reg_ehframe_ymm4,
    ds2::Architecture::X86::reg_lldb_ymm4,
    368,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm4,
    nullptr};
RegisterDef const reg_def_ymm5 = {
    "ymm5",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86::reg_dwarf_ymm5,
    ds2::Architecture::X86::reg_gdb_ymm5,
    ds2::Architecture::X86::reg_ehframe_ymm5,
    ds2::Architecture::X86::reg_lldb_ymm5,
    400,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm5,
    nullptr};
RegisterDef const reg_def_ymm6 = {
    "ymm6",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86::reg_dwarf_ymm6,
    ds2::Architecture::X86::reg_gdb_ymm6,
    ds2::Architecture::X86::reg_ehframe_ymm6,
    ds2::Architecture::X86::reg_lldb_ymm6,
    432,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm6,
    nullptr};
RegisterDef const reg_def_ymm7 = {
    "ymm7",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    256,
    ds2::Architecture::X86::reg_dwarf_ymm7,
    ds2::Architecture::X86::reg_gdb_ymm7,
    ds2::Architecture::X86::reg_ehframe_ymm7,
    ds2::Architecture::X86::reg_lldb_ymm7,
    464,
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingSizedInteger, nullptr},
    0,
    reg_inv_defs_ymm7,
    nullptr};
RegisterDef const reg_def_xmm0 = {
    "xmm0",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86::reg_dwarf_xmm0,
    ds2::Architecture::X86::reg_gdb_xmm0,
    ds2::Architecture::X86::reg_ehframe_xmm0,
    ds2::Architecture::X86::reg_lldb_xmm0,
    240 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm0,
    reg_cnt_defs_xmm0};
RegisterDef const reg_def_xmm1 = {
    "xmm1",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86::reg_dwarf_xmm1,
    -1,
    ds2::Architecture::X86::reg_ehframe_xmm1,
    ds2::Architecture::X86::reg_lldb_xmm1,
    272 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm1,
    reg_cnt_defs_xmm1};
RegisterDef const reg_def_xmm2 = {
    "xmm2",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86::reg_dwarf_xmm2,
    -1,
    ds2::Architecture::X86::reg_ehframe_xmm2,
    ds2::Architecture::X86::reg_lldb_xmm2,
    304 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm2,
    reg_cnt_defs_xmm2};
RegisterDef const reg_def_xmm3 = {
    "xmm3",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86::reg_dwarf_xmm3,
    -1,
    ds2::Architecture::X86::reg_ehframe_xmm3,
    ds2::Architecture::X86::reg_lldb_xmm3,
    336 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm3,
    reg_cnt_defs_xmm3};
RegisterDef const reg_def_xmm4 = {
    "xmm4",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86::reg_dwarf_xmm4,
    -1,
    ds2::Architecture::X86::reg_ehframe_xmm4,
    ds2::Architecture::X86::reg_lldb_xmm4,
    368 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm4,
    reg_cnt_defs_xmm4};
RegisterDef const reg_def_xmm5 = {
    "xmm5",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86::reg_dwarf_xmm5,
    -1,
    ds2::Architecture::X86::reg_ehframe_xmm5,
    ds2::Architecture::X86::reg_lldb_xmm5,
    400 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm5,
    reg_cnt_defs_xmm5};
RegisterDef const reg_def_xmm6 = {
    "xmm6",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86::reg_dwarf_xmm6,
    -1,
    ds2::Architecture::X86::reg_ehframe_xmm6,
    ds2::Architecture::X86::reg_lldb_xmm6,
    432 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm6,
    reg_cnt_defs_xmm6};
RegisterDef const reg_def_xmm7 = {
    "xmm7",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    128,
    ds2::Architecture::X86::reg_dwarf_xmm7,
    -1,
    ds2::Architecture::X86::reg_ehframe_xmm7,
    ds2::Architecture::X86::reg_lldb_xmm7,
    464 + REG_REL_OFFSET(32, 0, 16),
    ds2::Architecture::kLLDBVectorFormatUInt8,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatVector,
    {ds2::Architecture::kGDBEncodingCustom, "vec128"},
    0,
    reg_inv_defs_xmm7,
    reg_cnt_defs_xmm7};
RegisterDef const reg_def_orig_eax = {
    "orig_eax",
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    32,
    -1,
    ds2::Architecture::X86::reg_gdb_orig_eax,
    -1,
    -1,
    -1,
    ds2::Architecture::kLLDBVectorFormatNone,
    ds2::Architecture::kEncodingUInteger,
    ds2::Architecture::kFormatHexadecimal,
    {ds2::Architecture::kGDBEncodingInteger, nullptr},
    0,
    nullptr,
    nullptr};

} // namespace

//
// Public Definitions
//
namespace ds2 {
namespace Architecture {
namespace X86 {

LLDBDescriptor const LLDB = {3, lldb_reg_sets};
GDBDescriptor const GDB = {"i386:i386", "GNU/Linux", 3, gdb_features};

} // namespace X86
} // namespace Architecture
} // namespace ds2
